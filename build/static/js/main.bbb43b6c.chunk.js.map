{"version":3,"sources":["axios.js","services/userServices.js","slices/userSlice.js","components/Navbar/NavHeader.js","components/Home/HomeFooter.js","components/Home/HomeHeader.js","services/carServices.js","slices/carSlice.js","components/LoadingSpinner/LoadingSpinner.js","components/Home/sections/BMW.js","components/Home/sections/Ferrari.js","components/Home/sections/Lamborghini.js","components/Home/sections/About.js","components/Home/Home.js","components/Auth/ModalForgotPassword.js","components/Auth/Login.js","components/Auth/Register.js","components/ManageUser/ModalDeleteUser.js","components/ManageUser/ModalUpdateUser.js","components/ManageUser/User.js","components/Car/ModalCreateCar.js","components/Car/ModalDeleteCar.js","components/Car/ModalUpdateCar.js","components/Car/Car.js","services/bookingServices.js","slices/bookingSlice.js","components/Booking/ModalDeleteBooking.js","components/Booking/ModalUpdateBooking.js","components/Booking/ManageBooking.js","components/Booking/ModalCancelBooking.js","components/Booking/Booking.js","components/Personal/ModalUpdatePersonal.js","components/Personal/ModalChangePassword.js","components/Personal/Personal.js","components/ManageUser/DetailUser.js","routes/PrivateRoute.js","components/Booking/ModalCreateBooking.js","components/FacebookSDK/LikeAndShareFacebook.js","components/FacebookSDK/CommentFacebook.js","components/Home/sections/DetailCar.js","routes/AppRoutes.js","App.js","reportWebVitals.js","store/store.js","index.js"],"names":["instance","axios","create","baseURL","process","axiosRetry","retries","retryCondition","error","response","status","shouldResetTimeout","retryDelay","retryCount","defaults","withCredentials","interceptors","use","data","_error$response","_error$response2","_error$response2$data","errorMessage","toast","loginUser","createAsyncThunk","async","userData","_ref","rejectWithValue","post","email","password","loginUserService","logoutUser","get","registerNewUser","_ref2","firstName","lastName","address","phoneNumber","gender","groupId","registerNewUserService","fetchAllUsers","pagination","concat","page","limit","getAllUsersService","getUserById","userId","getUserByIdService","getUserRefresh","deleteUser","delete","deleteUserService","updateUser","put","id","updateUserService","updatePersonal","updatePersonalService","changePassword","newPassword","changePasswordService","forgotPassword","initialState","isUserError","isAuthenticated","isLogging","user","isRemoving","isRegistering","isLoadingAllUsers","listUsers","totalPages","isLoadingUserById","detailUser","isRefreshingUser","isDeletingUser","isUpdatingUser","isUpdatingPersonal","isChangingPassword","isRenewingPassword","userSlice","createSlice","name","reducers","extraReducers","builder","addCase","pending","state","action","fulfilled","_action$payload","_action$payload$data","payload","rejected","message","_action$payload2","_action$payload2$data","_action$payload3","_action$payload3$data","users","_action$payload4","_action$payload5","_action$payload5$data","_action$payload6","_action$payload6$data","_action$payload7","NavHeader","props","useSelector","location","useLocation","dispatch","useDispatch","history","useHistory","_jsx","children","pathname","Navbar","className","expand","_jsxs","Container","Toggle","Collapse","Nav","Link","NavLink","to","exact","_Fragment","Group","NavDropdown","title","onClick","_response$payload","errorCode","success","push","handleLogOutBtn","HomeFooter","href","HomeHeader","type","placeholder","getAllCars","getAllCarsService","creatNewCar","model","description","image","createNewCarService","deleteCar","carId","deleteCarService","updateCar","updateCarService","getBmwCar","getFerrariCar","getLamborghiniCar","getCarById","getCarByIdService","carSlice","isCarError","isLoadingAllCars","carList","totalCarPages","isCreatingCar","isDeletingCar","isUpdatingCar","isLoadingBmwCar","bmwCarList","isLoadingFerrariCar","ferrariCarList","isLoadingLamborghiniCar","lamborghiniCarList","isLoadingCarById","detailCar","cars","LoadingSpinner","PacmanLoader","size","loading","color","BMW","car","useEffect","Slider","settings","length","map","item","index","handleDetailCarPage","style","backgroundImage","Ferrari","Lamborghini","About","src","frameBorder","allow","referrerPolicy","allowFullScreen","Home","dots","infinite","speed","slidesToShow","slidesToScroll","mobileFirst","responsive","breakpoint","ModalForgotPassword","setEmail","useState","Modal","show","passwordModalShow","onHide","passwordModalClose","Header","closeButton","Title","Body","htmlFor","value","onChange","event","target","Footer","Button","variant","handleSendNewPassword","Login","showPassword","setShowPassword","setPassword","showModalForgotPassword","setShowModalForgotPassword","handleLoginBtn","test","handleForgotPasswordModalClose","onKeyDown","key","keyCode","handlePressEnter","Register","showConfirmPassword","setShowConfirmPassword","confirmPassword","setConfirmPassword","setFirstName","setLastName","setAddress","setPhoneNumber","setGender","setGroupId","handleRegisterBtn","checkValidateInput","arrInput","arrInputName","i","hidden","ModalDelete","handleClose","dataModalDelete","handleDeleteUser","ModalUpdateUser","dataModalUpdate","setUser","handleOnchangeInput","_userData","_","cloneDeep","updateShow","handleUpdateClose","handleUpdateUser","User","scrollHeight","setScrollHeight","scrollWidth","setScrollWidth","setPage","setLimit","showModalDelete","setShowModalDelete","setDataModal","showModalUpdate","setShowModalUpdate","setDataModalUpdate","windowWidth","window","innerWidth","windowHeight","innerHeight","Scrollbars","width","height","scope","colSpan","handleUpdateBtn","handleDetailBtn","ReactPaginate","nextLabel","onPageChange","selected","pageRangeDisplayed","marginPagesDisplayed","pageCount","previousLabel","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","breakLabel","breakClassName","breakLinkClassName","containerClassName","activeClassName","renderOnZeroPageCount","ModalDeleteUser","handleCloseDeleteModal","handleCloseUpdateModal","ModalCreateCar","setName","setModel","setDescription","setImage","handleCreateNewCar","validateInput","isValid","createCarClose","createCarShow","ModalDeleteCar","_props$dataDeleteModa","deleteCarShow","deleteCarClose","dataDeleteModal","handleDeleteCar","ModalUpdateCar","dataUpdateModal","setCar","_copyCar","updateCarShow","updateCarClose","handleUpdateCar","Car","createModalShow","setCreateModalShow","deleteModalShow","setDeleteModalShow","setDataDeleteModal","updateModalShow","setUpdateModalShow","setDataUpdateModal","handleUpdateCarBtn","handleCreateCarClose","handleDeleteCarClose","handleUpdateCarClose","getProcessBooking","getProcessBookingService","creatNewBooking","time","carName","createNewBookingService","deleteBooking","bookingId","deleteBookingService","updateBooking","updateBookingService","getBookingById","getBookingByIdService","cancelBooking","cancelBookingService","bookingSlice","isBookingError","isLoadingAllBookings","bookingList","totalBookingPages","isCreatingBooking","isDeletingBooking","isUpdatingBooking","isLoadingBookingById","detailBooking","isCancelingBooking","bookings","ModalDeleteBooking","deleteBookingShow","deleteBookingClose","handleDeleteBooking","ModalUpdateBooking","setStatus","setTime","updateBookingShow","updateBookingClose","handleUpdateBooking","ManageBooking","booking","_item$User","_item$Car","handleDeleteBookingClose","handleUpdateBookingClose","ModalCancelBooking","cancelBookingShow","cancelBookingClose","handleCancelBooking","Booking","_detailBooking$User","_detailBooking$Car","cancelModalShow","setCancelModalShow","textAlign","handleCancelBookingClose","ModalUpdatePersonal","userState","defaultState","updateModalClose","handleUpdatePersonal","ModalChangePassword","setNewPassword","handleChangePassword","Personal","showModalChangePassword","setShowModalChangePassword","handleUpdatePersonalClose","handleChangePasswordModalClose","_user$Group","_user$Group2","DetailUser","search","split","PrivateRoute","Route","path","component","Redirect","ModalCreateBooking","createBookingShow","createBookingClose","handleCreateNewBooking","LikeAndShareFacebook","dataHref","FB","XFBML","parse","fbAsyncInit","init","appId","cookie","xfbml","version","d","s","js","fjs","getElementsByTagName","getElementById","createElement","parentNode","insertBefore","document","class","CommentFacebook","DetailCar","handleCreateBookingClose","AppRoutes","Switch","App","Router","ToastContainer","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","theme","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","reducer","userReducer","carReducer","bookingReducer","ReactDOM","render","Provider"],"mappings":"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","file":"static/js/main.bbb43b6c.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport axiosRetry from 'axios-retry';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst instance = axios.create({\r\n    baseURL: process.env.REACT_APP_BACKEND_URL\r\n});\r\n\r\naxiosRetry(instance, {\r\n    retries: 3,\r\n    retryCondition: (error) => {\r\n        return error.response.status === 401\r\n    },\r\n    shouldResetTimeout: true,\r\n    retryDelay: (retryCount, error) => {\r\n        return retryCount * 1000\r\n    }\r\n})\r\n\r\n// allow set cookies from server\r\ninstance.defaults.withCredentials = true;\r\n\r\ninstance.interceptors.response.use(function (response) {\r\n    // Any status code that lie within the range of 2xx cause this function to trigger\r\n    // Do something with response data\r\n    return response.data;\r\n}, function (error) {\r\n    // Any status codes that falls outside the range of 2xx cause this function to trigger\r\n    // Do something with response error\r\n    let status = error?.response?.status || 500\r\n    let errorMessage = error?.response?.data?.errorMessage\r\n\r\n    switch (status) {\r\n        // case 400: {\r\n        //     // toast.error(errorMessage)\r\n        //     break;\r\n        // }\r\n        case 402: {\r\n            toast.error(errorMessage)\r\n            return error\r\n        }\r\n        default: {\r\n            return error\r\n        }\r\n    }\r\n});\r\n\r\nexport default instance;\r\n","// import axios from 'axios'\r\nimport axios from '../axios'\r\n\r\nconst loginUserService = (userData) => {\r\n    return axios.post('api/user/login-user', {\r\n        email: userData.email,\r\n        password: userData.password,\r\n    })\r\n}\r\n\r\nconst logoutUserService = () => {\r\n    return axios.get('/api/user/logout-user')\r\n}\r\n\r\nconst registerNewUserService = (userData) => {\r\n    return axios.post('/api/user/register', {\r\n        email: userData.email,\r\n        password: userData.password,\r\n        firstName: userData.firstName,\r\n        lastName: userData.lastName,\r\n        address: userData.address,\r\n        phoneNumber: userData.phoneNumber,\r\n        gender: userData.gender,\r\n        groupId: userData.groupId\r\n    })\r\n}\r\n\r\nconst getAllUsersService = (pagination) => {\r\n    return axios.get(`/api/user/get-all-users?page=${pagination.page}&limit=${pagination.limit}`)\r\n}\r\n\r\nconst getUserByIdService = (userId) => {\r\n    return axios.get(`/api/user/get-one-user?id=${userId}`)\r\n}\r\n\r\nconst getUserRefreshService = () => {\r\n    return axios.get('/api/user/get-user-refresh')\r\n}\r\n\r\nconst deleteUserService = (userId) => {\r\n    return axios.delete(`/api/user/delete-user`, {\r\n        data: {\r\n            userId: userId\r\n        }\r\n    })\r\n}\r\n\r\nconst updateUserService = (userData) => {\r\n    return axios.put('/api/user/update-user', {\r\n        id: userData.id,\r\n        firstName: userData.firstName,\r\n        lastName: userData.lastName,\r\n        address: userData.address,\r\n        phoneNumber: userData.phoneNumber,\r\n        gender: userData.gender,\r\n        groupId: userData.groupId\r\n    })\r\n}\r\n\r\nconst updatePersonalService = (userData) => {\r\n    return axios.put('/api/user/update-personal-user', {\r\n        id: userData.id,\r\n        firstName: userData.firstName,\r\n        lastName: userData.lastName,\r\n        address: userData.address,\r\n        phoneNumber: userData.phoneNumber,\r\n        gender: userData.gender,\r\n        groupId: userData.groupId\r\n    })\r\n}\r\n\r\nconst changePasswordService = (data) => {\r\n    return axios.put('/api/user/change-password', {\r\n        userId: data.userId,\r\n        password: data.password,\r\n        newPassword: data.newPassword,\r\n    })\r\n}\r\n\r\nconst forgotPasswordService = (email) => {\r\n    return axios.put('/api/user/forgot-password', {\r\n        email: email,\r\n    })\r\n}\r\n\r\nexport {\r\n    loginUserService,\r\n    logoutUserService,\r\n    registerNewUserService,\r\n    getAllUsersService,\r\n    getUserByIdService,\r\n    getUserRefreshService,\r\n    deleteUserService,\r\n    updateUserService,\r\n    updatePersonalService,\r\n    changePasswordService,\r\n    forgotPasswordService,\r\n}","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\r\nimport {\r\n    getAllUsersService,\r\n    registerNewUserService,\r\n    loginUserService,\r\n    getUserByIdService,\r\n    getUserRefreshService,\r\n    logoutUserService,\r\n    deleteUserService,\r\n    updateUserService,\r\n    updatePersonalService,\r\n    changePasswordService,\r\n    forgotPasswordService,\r\n} from '../services/userServices'\r\n\r\nexport const loginUser = createAsyncThunk(\r\n    'user/loginUser',\r\n    async (userData, { rejectWithValue }) => {\r\n        try {\r\n            const response = await loginUserService(userData)\r\n            return response\r\n        } catch (error) {\r\n            return rejectWithValue(error);\r\n        }\r\n    },\r\n)\r\n\r\nexport const logoutUser = createAsyncThunk(\r\n    'user/logoutUser',\r\n    async () => {\r\n        try {\r\n            const response = await logoutUserService()\r\n            return response\r\n        } catch (error) {\r\n            return error;\r\n        }\r\n    },\r\n)\r\n\r\nexport const registerNewUser = createAsyncThunk(\r\n    'user/registerNewUser',\r\n    async (userData, { rejectWithValue }) => {\r\n        try {\r\n            const response = await registerNewUserService(userData)\r\n            return response\r\n        } catch (error) {\r\n            return rejectWithValue(error);\r\n        }\r\n    },\r\n)\r\n\r\nexport const fetchAllUsers = createAsyncThunk(\r\n    'user/fetchAllUsers',\r\n    async (pagination) => {\r\n        try {\r\n            const response = await getAllUsersService(pagination)\r\n            return response\r\n        } catch (error) {\r\n            return error;\r\n        }\r\n    },\r\n)\r\n\r\nexport const getUserById = createAsyncThunk(\r\n    'user/getUserById',\r\n    async (userId) => {\r\n        try {\r\n            const response = await getUserByIdService(userId)\r\n            return response\r\n        } catch (error) {\r\n            return error;\r\n        }\r\n    },\r\n)\r\n\r\nexport const getUserRefresh = createAsyncThunk(\r\n    'user/getUserRefresh',\r\n    async () => {\r\n        try {\r\n            const response = await getUserRefreshService()\r\n            return response\r\n        } catch (error) {\r\n            return error;\r\n        }\r\n    },\r\n)\r\n\r\nexport const deleteUser = createAsyncThunk(\r\n    'user/deleteUser',\r\n    async (userId) => {\r\n        try {\r\n            const response = await deleteUserService(userId)\r\n            return response\r\n        } catch (error) {\r\n            return error;\r\n        }\r\n    },\r\n)\r\n\r\nexport const updateUser = createAsyncThunk(\r\n    'user/updateUser',\r\n    async (userData) => {\r\n        try {\r\n            const response = await updateUserService(userData)\r\n            return response\r\n        } catch (error) {\r\n            return error;\r\n        }\r\n    },\r\n)\r\n\r\nexport const updatePersonal = createAsyncThunk(\r\n    'user/updatePersonal',\r\n    async (userData) => {\r\n        try {\r\n            const response = await updatePersonalService(userData)\r\n            return response\r\n        } catch (error) {\r\n            return error;\r\n        }\r\n    },\r\n)\r\n\r\nexport const changePassword = createAsyncThunk(\r\n    'user/changePassword',\r\n    async (data) => {\r\n        try {\r\n            const response = await changePasswordService(data)\r\n            return response\r\n        } catch (error) {\r\n            return error;\r\n        }\r\n    },\r\n)\r\n\r\nexport const forgotPassword = createAsyncThunk(\r\n    'user/forgotPassword',\r\n    async (data) => {\r\n        try {\r\n            const response = await forgotPasswordService(data)\r\n            return response\r\n        } catch (error) {\r\n            return error;\r\n        }\r\n    },\r\n)\r\n\r\nconst initialState = {\r\n    // common state\r\n    isUserError: null,\r\n\r\n    // login state\r\n    isAuthenticated: false,\r\n    isLogging: false,\r\n    user: null,\r\n\r\n    // logout state\r\n    isRemoving: false,\r\n\r\n    // register state\r\n    isRegistering: false,\r\n\r\n    // fetch all users state\r\n    isLoadingAllUsers: false,\r\n    listUsers: [],\r\n    totalPages: 0,\r\n\r\n    // fetch user by id state\r\n    isLoadingUserById: false,\r\n    detailUser: null,\r\n\r\n    // fetch user when refresh\r\n    isRefreshingUser: false,\r\n\r\n    // delete user\r\n    isDeletingUser: false,\r\n\r\n    // update user\r\n    isUpdatingUser: false,\r\n\r\n    // update user\r\n    isUpdatingPersonal: false,\r\n\r\n    // change password\r\n    isChangingPassword: false,\r\n\r\n    // forgot password\r\n    isRenewingPassword: false,\r\n}\r\n\r\nexport const userSlice = createSlice({\r\n    name: 'user',\r\n    initialState,\r\n    reducers: {\r\n\r\n    },\r\n    extraReducers: (builder) => {\r\n        // login user\r\n        builder\r\n            .addCase(loginUser.pending, (state, action) => {\r\n                state.isLogging = true\r\n                state.isAuthenticated = false\r\n            })\r\n            .addCase(loginUser.fulfilled, (state, action) => {\r\n                state.isLogging = false\r\n                state.isAuthenticated = true\r\n                state.user = action.payload?.data?.user\r\n            })\r\n            .addCase(loginUser.rejected, (state, action) => {\r\n                state.isLogging = false\r\n                state.isAuthenticated = false\r\n                state.isUserError = action.payload.message\r\n            })\r\n\r\n        // logout user\r\n        builder\r\n            .addCase(logoutUser.pending, (state, action) => {\r\n                state.isRemoving = true\r\n            })\r\n            .addCase(logoutUser.fulfilled, (state, action) => {\r\n                state.isRemoving = false\r\n                state.isAuthenticated = false\r\n                state.user = initialState.user\r\n            })\r\n            .addCase(logoutUser.rejected, (state, action) => {\r\n                state.isRemoving = false\r\n                state.isUserError = action.payload.message\r\n            })\r\n\r\n        // register new user\r\n        builder\r\n            .addCase(registerNewUser.pending, (state, action) => {\r\n                state.isRegistering = true\r\n            })\r\n            .addCase(registerNewUser.fulfilled, (state, action) => {\r\n                state.isRegistering = false\r\n            })\r\n            .addCase(registerNewUser.rejected, (state, action) => {\r\n                state.isRegistering = false\r\n                state.isUserError = action.payload.message\r\n            })\r\n\r\n        // fetch all user\r\n        builder\r\n            .addCase(fetchAllUsers.pending, (state, action) => {\r\n                state.isLoadingAllUsers = true\r\n            })\r\n            .addCase(fetchAllUsers.fulfilled, (state, action) => {\r\n                state.isLoadingAllUsers = false\r\n                state.listUsers = action.payload?.data?.users\r\n                state.totalPages = action.payload?.data?.totalPages\r\n            })\r\n            .addCase(fetchAllUsers.rejected, (state, action) => {\r\n                state.isLoadingAllUsers = false\r\n                state.isUserError = action.payload.message\r\n            })\r\n\r\n        // fetch user by id\r\n        builder\r\n            .addCase(getUserById.pending, (state, action) => {\r\n                state.isLoadingUserById = true\r\n            })\r\n            .addCase(getUserById.fulfilled, (state, action) => {\r\n                state.isLoadingUserById = false\r\n                state.detailUser = action.payload?.data\r\n            })\r\n            .addCase(getUserById.rejected, (state, action) => {\r\n                state.isLoadingUserById = false\r\n                state.isUserError = action.payload.message\r\n            })\r\n\r\n        // refresh user when reload\r\n        builder\r\n            .addCase(getUserRefresh.pending, (state, action) => {\r\n                state.isRefreshingUser = true\r\n            })\r\n            .addCase(getUserRefresh.fulfilled, (state, action) => {\r\n                state.isRefreshingUser = false\r\n                state.isAuthenticated = action.payload?.data?.isAuthenticated\r\n                state.user = action.payload?.data?.user\r\n            })\r\n            .addCase(getUserRefresh.rejected, (state, action) => {\r\n                state.isAuthenticated = false\r\n                state.isRefreshingUser = false\r\n                // state.isUserError = action.payload.message\r\n            })\r\n\r\n        // delete user \r\n        builder\r\n            .addCase(deleteUser.pending, (state, action) => {\r\n                state.isDeletingUser = true\r\n            })\r\n            .addCase(deleteUser.fulfilled, (state, action) => {\r\n                state.isDeletingUser = false\r\n            })\r\n            .addCase(deleteUser.rejected, (state, action) => {\r\n                state.isDeletingUser = false\r\n                state.isUserError = action.payload.message\r\n            })\r\n\r\n        // update user \r\n        builder\r\n            .addCase(updateUser.pending, (state, action) => {\r\n                state.isUpdatingUser = true\r\n            })\r\n            .addCase(updateUser.fulfilled, (state, action) => {\r\n                state.isUpdatingUser = false\r\n            })\r\n            .addCase(updateUser.rejected, (state, action) => {\r\n                state.isUpdatingUser = false\r\n                state.isUserError = action.payload.message\r\n            })\r\n\r\n        // update personal \r\n        builder\r\n            .addCase(updatePersonal.pending, (state, action) => {\r\n                state.isUpdatingPersonal = true\r\n            })\r\n            .addCase(updatePersonal.fulfilled, (state, action) => {\r\n                state.isUpdatingPersonal = false\r\n                state.user = action.payload?.data\r\n            })\r\n            .addCase(updatePersonal.rejected, (state, action) => {\r\n                state.isUpdatingPersonal = false\r\n                state.isUserError = action.payload.message\r\n            })\r\n\r\n        // change password\r\n        builder\r\n            .addCase(changePassword.pending, (state, action) => {\r\n                state.isChangingPassword = true\r\n            })\r\n            .addCase(changePassword.fulfilled, (state, action) => {\r\n                state.isChangingPassword = false\r\n            })\r\n            .addCase(changePassword.rejected, (state, action) => {\r\n                state.isChangingPassword = false\r\n                state.isUserError = action.payload.message\r\n            })\r\n\r\n        // forgot password\r\n        builder\r\n            .addCase(forgotPassword.pending, (state, action) => {\r\n                state.isRenewingPassword = true\r\n            })\r\n            .addCase(forgotPassword.fulfilled, (state, action) => {\r\n                state.isRenewingPassword = false\r\n            })\r\n            .addCase(forgotPassword.rejected, (state, action) => {\r\n                state.isRenewingPassword = false\r\n                state.isUserError = action.payload.message\r\n            })\r\n    },\r\n})\r\n\r\nexport default userSlice.reducer","import React from 'react';\r\nimport './NavHeader.scss';\r\nimport { NavLink, useLocation } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { logoutUser } from '../../slices/userSlice'\r\nimport { toast } from 'react-toastify';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Container from 'react-bootstrap/Container';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport NavDropdown from 'react-bootstrap/NavDropdown';\r\n\r\nconst NavHeader = (props) => {\r\n    const isAuthenticated = useSelector(state => state.user.isAuthenticated)\r\n    const user = useSelector(state => state.user.user)\r\n    const location = useLocation()\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n\r\n    const handleLogOutBtn = async () => {\r\n        let response = await dispatch(logoutUser())\r\n        if (response?.payload?.errorCode === 0) {\r\n            toast.success(response.payload.errorMessage)\r\n            history.push('/')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!(location.pathname === \"/login\" || location.pathname === \"/register\") &&\r\n                <Navbar className=\"topnav fixed-top\" expand=\"lg\">\r\n                    <Container >\r\n                        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n\r\n                            {/* content left */}\r\n                            <Nav className=\"me-auto\">\r\n                                <Nav.Link>\r\n                                    <NavLink to=\"/\" exact>Home</NavLink>\r\n                                </Nav.Link>\r\n\r\n                                {(isAuthenticated && user)\r\n                                    ?\r\n                                    <>\r\n                                        <Nav.Link>\r\n                                            <NavLink to=\"/personal\">Personal</NavLink>\r\n                                        </Nav.Link>\r\n                                        <Nav.Link>\r\n                                            <NavLink to=\"/booking\" exact>Booking</NavLink>\r\n                                        </Nav.Link>\r\n                                    </>\r\n                                    :\r\n                                    <Nav.Link>\r\n                                        <NavLink to=\"/login\">Login</NavLink>\r\n                                    </Nav.Link>\r\n                                }\r\n                            </Nav>\r\n\r\n                            {/* content right */}\r\n                            <Nav>\r\n                                {(isAuthenticated && user)\r\n                                    &&\r\n                                    <>\r\n                                        <div className='user-info'>\r\n                                            {/* <h3 className='welcome-text'>Hi&nbsp;</h3> */}\r\n                                            <h3 className='user-role'>{user && user.Group && user.Group.name}:</h3>\r\n                                            <h3 className='user-name'>{user && user.firstName}</h3>\r\n                                        </div>\r\n\r\n                                        <NavDropdown className='nav-dropdown-customized className=\"justify-content-end\"' title=\"Manage\" id=\"basic-nav-dropdown\">\r\n                                            <Nav.Link>\r\n                                                <NavLink to=\"/car\" exact>Manage Car</NavLink>\r\n                                            </Nav.Link>\r\n                                            <Nav.Link>\r\n                                                <NavLink to=\"/booking/manage\" exact>Manage booking</NavLink>\r\n                                            </Nav.Link>\r\n                                            <Nav.Link>\r\n                                                <NavLink to=\"/user\" exact>Manage user</NavLink>\r\n                                            </Nav.Link>\r\n                                        </NavDropdown>\r\n\r\n                                        <button\r\n                                            onClick={() => handleLogOutBtn()}\r\n                                            className='btn btn-primary btn-customized'\r\n                                        >\r\n                                            <i className=\"fa-solid fa-right-from-bracket\"></i>\r\n                                        </button>\r\n                                    </>\r\n                                }\r\n                            </Nav>\r\n                        </Navbar.Collapse>\r\n                    </Container>\r\n                </Navbar>\r\n\r\n            }\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NavHeader;","import './HomeFooter.scss'\r\n\r\nconst HomeFooter = (props) => {\r\n    return (\r\n        <div className='home-footer-container'>\r\n            <div className=\"map-footer\">\r\n            </div>\r\n\r\n            <div className='home-footer'>\r\n                <div className=\"social-list\">\r\n                    <a href='/#'><i className=\"fab fa-facebook\"></i></a>\r\n                    <a href='/#'><i className=\"fab fa-instagram\"></i></a>\r\n                    <a href='/#'><i className=\"fab fa-youtube\"></i></a>\r\n                    <a href='/#'><i className=\"fab fa-twitter\"></i></a>\r\n                    <a href='/#'><i className=\"fab fa-linkedin\"></i></a>\r\n                    <a href='/#'><i className=\"fab fa-pinterest-p\"></i></a>\r\n                </div>\r\n                <div className=\"copyright\">\r\n                    &copy; 2024\r\n                    <button\r\n                    >\r\n                        LuxuryCar.com\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomeFooter","import './HomeHeader.scss'\r\n\r\nconst HomeHeader = (props) => {\r\n    return (\r\n        <div className='home-header-container'>\r\n            <div className='home-header-banner'>\r\n                <div className='content-up'>\r\n                    <div className='title1'>Ultimate Luxury Vehicles</div>\r\n                    <div className='title2'>Car And Driver</div>\r\n                    <div className='search'>\r\n                        <i className='fa fa-search'></i>\r\n                        <input type='text' placeholder='Find your car' />\r\n                    </div>\r\n                </div>\r\n                <div className='content-down'>\r\n                    <div className='options'>\r\n                        <div className='option-child'>\r\n                            <div className='icon-child'>\r\n                                <i className=\"fa-solid fa-car\"></i>\r\n                            </div>\r\n                            {/* <div className='text-child'>Car</div> */}\r\n                        </div>\r\n                        <div className='option-child'>\r\n                            <div className='icon-child'>\r\n                                <i className=\"fa-solid fa-motorcycle\"></i>\r\n                            </div>\r\n                            {/* <div className='text-child'>Motor</div> */}\r\n                        </div>\r\n                        <div className='option-child'>\r\n                            <div className='icon-child'>\r\n                                <i className=\"fa-solid fa-cart-shopping\"></i>\r\n                            </div>\r\n                            {/* <div className='text-child'>Cart</div> */}\r\n                        </div>\r\n                        <div className='option-child'>\r\n                            <div className='icon-child'>\r\n                                <i className=\"fa-regular fa-credit-card\"></i>\r\n                            </div>\r\n                            {/* <div className='text-child'>Credit</div> */}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomeHeader","// import axios from 'axios'\r\nimport axios from '../axios'\r\n\r\nconst getAllCarsService = (pagination) => {\r\n    return axios.get(`/api/car/get-all-cars?page=${pagination.page}&limit=${pagination.limit}`)\r\n}\r\n\r\nconst createNewCarService = (data) => {\r\n    return axios.post('/api/car/create-new-car', {\r\n        name: data.name,\r\n        model: data.model,\r\n        description: data.description,\r\n        image: data.image\r\n    })\r\n}\r\n\r\nconst deleteCarService = (carId) => {\r\n    return axios.delete('/api/car/delete-car', {\r\n        data: {\r\n            carId: carId\r\n        }\r\n    })\r\n}\r\n\r\nconst updateCarService = (data) => {\r\n    return axios.put('/api/car/update-car', {\r\n        id: data.id,\r\n        name: data.name,\r\n        model: data.model,\r\n        description: data.description,\r\n        image: data.image\r\n    })\r\n}\r\n\r\nconst getBmwCarService = () => {\r\n    return axios.get('/api/car/get-bmw-car')\r\n}\r\n\r\nconst getFerrariCarService = () => {\r\n    return axios.get('/api/car/get-ferrari-car')\r\n}\r\n\r\nconst getLamborghiniCarService = () => {\r\n    return axios.get('/api/car/get-lamborghini-car')\r\n}\r\n\r\nconst getCarByIdService = (carId) => {\r\n    return axios.get(`/api/car/get-one-car?carId=${carId}`)\r\n}\r\n\r\nexport {\r\n    getAllCarsService,\r\n    createNewCarService,\r\n    deleteCarService,\r\n    updateCarService,\r\n    getBmwCarService,\r\n    getFerrariCarService,\r\n    getLamborghiniCarService,\r\n    getCarByIdService,\r\n}","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\r\nimport {\r\n    getAllCarsService,\r\n    createNewCarService,\r\n    deleteCarService,\r\n    updateCarService,\r\n    getBmwCarService,\r\n    getFerrariCarService,\r\n    getLamborghiniCarService,\r\n    getCarByIdService,\r\n} from '../services/carServices'\r\n\r\nexport const getAllCars = createAsyncThunk(\r\n    'car/getAllCars',\r\n    async (pagination) => {\r\n        try {\r\n            const response = await getAllCarsService(pagination)\r\n            return response\r\n        } catch (error) {\r\n            return error;\r\n        }\r\n    },\r\n)\r\n\r\nexport const creatNewCar = createAsyncThunk(\r\n    'car/creatNewCar',\r\n    async (data, { rejectWithValue }) => {\r\n        try {\r\n            const response = await createNewCarService(data)\r\n            return response\r\n        } catch (error) {\r\n            return rejectWithValue(error);\r\n        }\r\n    },\r\n)\r\n\r\nexport const deleteCar = createAsyncThunk(\r\n    'car/deleteCar',\r\n    async (carId) => {\r\n        try {\r\n            const response = await deleteCarService(carId)\r\n            return response\r\n        } catch (error) {\r\n            return error;\r\n        }\r\n    },\r\n)\r\n\r\nexport const updateCar = createAsyncThunk(\r\n    'car/updateCar',\r\n    async (data) => {\r\n        try {\r\n            const response = await updateCarService(data)\r\n            return response\r\n        } catch (error) {\r\n            return error;\r\n        }\r\n    },\r\n)\r\n\r\nexport const getBmwCar = createAsyncThunk(\r\n    'car/getBmwCar',\r\n    async () => {\r\n        try {\r\n            const response = await getBmwCarService()\r\n            return response\r\n        } catch (error) {\r\n            return error;\r\n        }\r\n    },\r\n)\r\n\r\nexport const getFerrariCar = createAsyncThunk(\r\n    'car/getFerrariCar',\r\n    async () => {\r\n        try {\r\n            const response = await getFerrariCarService()\r\n            return response\r\n        } catch (error) {\r\n            return error;\r\n        }\r\n    },\r\n)\r\n\r\nexport const getLamborghiniCar = createAsyncThunk(\r\n    'car/getLamborghiniCar',\r\n    async () => {\r\n        try {\r\n            const response = await getLamborghiniCarService()\r\n            return response\r\n        } catch (error) {\r\n            return error;\r\n        }\r\n    },\r\n)\r\n\r\nexport const getCarById = createAsyncThunk(\r\n    'car/getCarById',\r\n    async (carId) => {\r\n        try {\r\n            const response = await getCarByIdService(carId)\r\n            return response\r\n        } catch (error) {\r\n            return error;\r\n        }\r\n    },\r\n)\r\n\r\nconst initialState = {\r\n    // common state\r\n    isCarError: null,\r\n\r\n    // get all cars with pagination\r\n    isLoadingAllCars: false,\r\n    carList: [],\r\n    totalCarPages: 0,\r\n\r\n    // create new car\r\n    isCreatingCar: false,\r\n\r\n    // delete car\r\n    isDeletingCar: false,\r\n\r\n    // update car\r\n    isUpdatingCar: false,\r\n\r\n    // get bmw car\r\n    isLoadingBmwCar: false,\r\n    bmwCarList: [],\r\n\r\n    // get ferrari car\r\n    isLoadingFerrariCar: false,\r\n    ferrariCarList: [],\r\n\r\n    // get lamborghini car\r\n    isLoadingLamborghiniCar: false,\r\n    lamborghiniCarList: [],\r\n\r\n    // get car by id\r\n    isLoadingCarById: false,\r\n    detailCar: null,\r\n}\r\n\r\nexport const carSlice = createSlice({\r\n    name: 'car',\r\n    initialState,\r\n    reducers: {\r\n\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder\r\n            // get all cars\r\n            .addCase(getAllCars.pending, (state, action) => {\r\n                state.isLoadingAllCars = true\r\n            })\r\n            .addCase(getAllCars.fulfilled, (state, action) => {\r\n                state.isLoadingAllCars = false\r\n                state.carList = action.payload?.data?.cars\r\n                state.totalCarPages = action.payload?.data?.totalCarPages\r\n            })\r\n            .addCase(getAllCars.rejected, (state, action) => {\r\n                state.isLoadingAllCars = false\r\n                state.isCarError = action.payload.message\r\n            })\r\n\r\n            // create a new car\r\n            .addCase(creatNewCar.pending, (state, action) => {\r\n                state.isCreatingCar = true\r\n            })\r\n            .addCase(creatNewCar.fulfilled, (state, action) => {\r\n                state.isCreatingCar = false\r\n            })\r\n            .addCase(creatNewCar.rejected, (state, action) => {\r\n                state.isCreatingCar = false\r\n                state.isCarError = action.payload.message\r\n            })\r\n\r\n            // delete car\r\n            .addCase(deleteCar.pending, (state, action) => {\r\n                state.isDeletingCar = true\r\n            })\r\n            .addCase(deleteCar.fulfilled, (state, action) => {\r\n                state.isDeletingCar = false\r\n            })\r\n            .addCase(deleteCar.rejected, (state, action) => {\r\n                state.isDeletingCar = false\r\n                state.isCarError = action.payload.message\r\n            })\r\n\r\n            // update car\r\n            .addCase(updateCar.pending, (state, action) => {\r\n                state.isUpdatingCar = true\r\n            })\r\n            .addCase(updateCar.fulfilled, (state, action) => {\r\n                state.isUpdatingCar = false\r\n            })\r\n            .addCase(updateCar.rejected, (state, action) => {\r\n                state.isUpdatingCar = false\r\n                state.isCarError = action.payload.message\r\n            })\r\n\r\n            // get bmw car\r\n            .addCase(getBmwCar.pending, (state, action) => {\r\n                state.isLoadingBmwCar = true\r\n            })\r\n            .addCase(getBmwCar.fulfilled, (state, action) => {\r\n                state.isLoadingBmwCar = false\r\n                state.bmwCarList = action.payload?.data\r\n            })\r\n            .addCase(getBmwCar.rejected, (state, action) => {\r\n                state.isLoadingBmwCar = false\r\n                state.isCarError = action.payload.message\r\n            })\r\n\r\n            // get ferrari car\r\n            .addCase(getFerrariCar.pending, (state, action) => {\r\n                state.isLoadingFerrariCar = true\r\n            })\r\n            .addCase(getFerrariCar.fulfilled, (state, action) => {\r\n                state.isLoadingFerrariCar = false\r\n                state.ferrariCarList = action.payload?.data\r\n            })\r\n            .addCase(getFerrariCar.rejected, (state, action) => {\r\n                state.isLoadingFerrariCar = false\r\n                state.isCarError = action.payload.message\r\n            })\r\n\r\n            // get lamborghini car\r\n            .addCase(getLamborghiniCar.pending, (state, action) => {\r\n                state.isLoadingLamborghiniCar = true\r\n            })\r\n            .addCase(getLamborghiniCar.fulfilled, (state, action) => {\r\n                state.isLoadingLamborghiniCar = false\r\n                state.lamborghiniCarList = action.payload?.data\r\n            })\r\n            .addCase(getLamborghiniCar.rejected, (state, action) => {\r\n                state.isLoadingLamborghiniCar = false\r\n                state.isCarError = action.payload.message\r\n            })\r\n\r\n            // get car by id\r\n            .addCase(getCarById.pending, (state, action) => {\r\n                state.isLoadingCarById = true\r\n            })\r\n            .addCase(getCarById.fulfilled, (state, action) => {\r\n                state.isLoadingCarById = false\r\n                state.detailCar = action.payload?.data\r\n            })\r\n            .addCase(getCarById.rejected, (state, action) => {\r\n                state.isLoadingCarById = false\r\n                state.isCarError = action.payload.message\r\n            })\r\n    },\r\n})\r\n\r\nexport default carSlice.reducer","import PacmanLoader from \"react-spinners/PacmanLoader\";\r\nimport './LoadingSpinner.scss';\r\n\r\nfunction LoadingSpinner() {\r\n\r\n    return (\r\n        <div className='spiner-container'>\r\n            < PacmanLoader\r\n                size={80}\r\n                loading={true}\r\n                color=\"#36d7b7\" />\r\n            <h1 className='spiner-text mt-3'>Data is loading...</h1>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default LoadingSpinner;","import './BMW.scss'\r\nimport Slider from \"react-slick\";\r\nimport React, { useEffect } from 'react';\r\nimport { getBmwCar } from '../../../slices/carSlice'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport LoadingSpinner from '../../LoadingSpinner/LoadingSpinner';\r\n\r\nconst BMW = (props) => {\r\n    const dispatch = useDispatch()\r\n    const bmwCarList = useSelector(state => state.car.bmwCarList)\r\n    const history = useHistory()\r\n    const isLoadingBmwCar = useSelector(state => state.car.isLoadingBmwCar)\r\n\r\n    useEffect(() => {\r\n        dispatch(getBmwCar())\r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n    const handleDetailCarPage = (data) => {\r\n        history.push(`/car/detail?id=${data.id}`)\r\n    }\r\n\r\n    return (\r\n        <div className='BMW-section-container'>\r\n            <div className='section-container container mt-5'>\r\n                <div className='section-header'>\r\n                    <span className='header-title'>BMW</span>\r\n                    {/* <button className='header-btn'><span>SEE MORE</span></button> */}\r\n                </div>\r\n                {isLoadingBmwCar ?\r\n                    <LoadingSpinner />\r\n                    :\r\n                    <div className='section-body'>\r\n                        <Slider {...props.settings}>\r\n                            {bmwCarList && bmwCarList.length > 0 &&\r\n                                bmwCarList.map((item, index) => (\r\n                                    <div className='img-container px-3' key={`bmw-${index}`}>\r\n                                        <div\r\n                                            onClick={() => handleDetailCarPage(item)}\r\n                                            className='img-customize'\r\n                                        >\r\n                                            <div\r\n                                                style={{ backgroundImage: `url(${item.image})` }}\r\n                                                className='img-background'>\r\n                                            </div>\r\n                                            <div className='img-content'>{item.name}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                ))\r\n                            }\r\n                        </Slider>\r\n                    </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BMW","import './Ferrari.scss'\r\nimport Slider from \"react-slick\";\r\nimport React, { useEffect } from 'react';\r\nimport { getFerrariCar } from '../../../slices/carSlice'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport LoadingSpinner from '../../LoadingSpinner/LoadingSpinner';\r\n\r\nconst Ferrari = (props) => {\r\n    const dispatch = useDispatch()\r\n    const ferrariCarList = useSelector(state => state.car.ferrariCarList)\r\n    const history = useHistory()\r\n    const isLoadingFerrariCar = useSelector(state => state.car.isLoadingFerrariCar)\r\n\r\n    useEffect(() => {\r\n        dispatch(getFerrariCar())\r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n    const handleDetailCarPage = (data) => {\r\n        history.push(`/car/detail?id=${data.id}`)\r\n    }\r\n\r\n    return (\r\n        <div className='ferrari-section-container'>\r\n            <div className='section-container container mt-5'>\r\n                <div className='section-header'>\r\n                    <span className='header-title'>FERRARI</span>\r\n                    {/* <button className='header-btn'><span>SEE MORE</span></button> */}\r\n                </div>\r\n\r\n                {isLoadingFerrariCar ?\r\n                    <LoadingSpinner />\r\n                    :\r\n                    <div className='section-body'>\r\n                        <Slider {...props.settings}>\r\n                            {ferrariCarList && ferrariCarList.length > 0 &&\r\n                                ferrariCarList.map((item, index) => (\r\n                                    <div className='img-container px-3' key={`bmw-${index}`}>\r\n                                        <div\r\n                                            onClick={() => handleDetailCarPage(item)}\r\n                                            className='img-customize'\r\n                                        >\r\n                                            <div\r\n                                                style={{ backgroundImage: `url(${item.image})` }}\r\n                                                className='img-background'>\r\n                                            </div>\r\n                                            <div className='img-content'>{item.name}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                ))\r\n                            }\r\n                        </Slider>\r\n                    </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Ferrari","import './Lamborghini.scss'\r\nimport Slider from \"react-slick\";\r\nimport React, { useEffect } from 'react';\r\nimport { getLamborghiniCar } from '../../../slices/carSlice'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport LoadingSpinner from '../../LoadingSpinner/LoadingSpinner';\r\n\r\nconst Lamborghini = (props) => {\r\n    const lamborghiniCarList = useSelector(state => state.car.lamborghiniCarList)\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n    const isLoadingLamborghiniCar = useSelector(state => state.car.isLoadingLamborghiniCar)\r\n\r\n    useEffect(() => {\r\n        dispatch(getLamborghiniCar())\r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n    const handleDetailCarPage = (data) => {\r\n        history.push(`/car/detail?id=${data.id}`)\r\n    }\r\n\r\n    return (\r\n        <div className='lamborghini-section-container'>\r\n            <div className='section-container container mt-5'>\r\n                <div className='section-header'>\r\n                    <span className='header-title'>LAMBORGHINI</span>\r\n                    {/* <button className='header-btn'><span>SEE MORE</span></button> */}\r\n                </div>\r\n                {isLoadingLamborghiniCar ?\r\n                    <LoadingSpinner />\r\n                    :\r\n                    <div className='section-body'>\r\n                        <Slider {...props.settings}>\r\n                            {lamborghiniCarList && lamborghiniCarList.length > 0 &&\r\n                                lamborghiniCarList.map((item, index) => (\r\n                                    <div className='img-container px-3' key={`bmw-${index}`}>\r\n                                        <div\r\n                                            onClick={() => handleDetailCarPage(item)}\r\n                                            className='img-customize'\r\n                                        >\r\n                                            <div\r\n                                                style={{ backgroundImage: `url(${item.image})` }}\r\n                                                className='img-background'>\r\n                                            </div>\r\n                                            <div className='img-content'>{item.name}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                ))\r\n                            }\r\n                        </Slider>\r\n                    </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Lamborghini","import './About.scss'\r\nimport React from 'react';\r\n\r\nconst About = (props) => {\r\n    return (\r\n        <div className='about-section-container'>\r\n            <div className='section-container container'>\r\n                <div className='about-header section-header'>\r\n                    <div className='about-title'>VIDEO ABOUT</div>\r\n                </div>\r\n                <div className='about-content row'>\r\n                    <div className='about-video col-12'>\r\n                        <iframe\r\n                            src=\"https://www.youtube.com/embed/AI7dOlAp-iE\"\r\n                            title=\"2024 Ferrari SF90 Spider Assetto Fiorano - Interior and Exterior Walkaround\"\r\n                            frameBorder=\"0\"\r\n                            allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\"\r\n                            referrerPolicy=\"strict-origin-when-cross-origin\"\r\n                            allowFullScreen>\r\n                        </iframe>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About","import React from 'react';\r\nimport './Home.scss';\r\nimport HomeFooter from './HomeFooter';\r\nimport HomeHeader from './HomeHeader';\r\nimport BMW from './sections/BMW';\r\nimport Ferrari from './sections/Ferrari';\r\nimport Lamborghini from './sections/Lamborghini';\r\nimport About from './sections/About';\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\n\r\nconst Home = (props) => {\r\n    let settings = {\r\n        dots: false,\r\n        infinite: false,\r\n        speed: 800,\r\n        slidesToShow: 3,\r\n        slidesToScroll: 3,\r\n        mobileFirst: true,\r\n        responsive: [\r\n            {\r\n                breakpoint: 1024,\r\n                settings: {\r\n                    slidesToShow: 3,\r\n                    slidesToScroll: 3,\r\n                }\r\n            },\r\n            {\r\n                breakpoint: 600,\r\n                settings: {\r\n                    slidesToShow: 2,\r\n                    slidesToScroll: 2,\r\n                }\r\n            },\r\n            {\r\n                breakpoint: 480,\r\n                settings: {\r\n                    slidesToShow: 1,\r\n                    slidesToScroll: 1\r\n                }\r\n            }\r\n        ]\r\n    }\r\n\r\n    return (\r\n        <div className='home-container' >\r\n            <HomeHeader />\r\n            <BMW settings={settings} />\r\n            <Ferrari settings={settings} />\r\n            <Lamborghini settings={settings} />\r\n            <About />\r\n            <HomeFooter />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport React, { useState } from 'react';\r\nimport { forgotPassword } from '../../slices/userSlice'\r\nimport { useDispatch } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst ModalForgotPassword = (props) => {\r\n    const [email, setEmail] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const handleSendNewPassword = async () => {\r\n        let response = await dispatch(forgotPassword(email))\r\n\r\n        if (response\r\n            && response.payload\r\n            && response.payload.response\r\n            && response.payload.response.data\r\n            && response.payload.response.data.errorCode !== 0\r\n        ) {\r\n            toast.error(response.payload.response.data.errorMessage)\r\n        }\r\n\r\n        if (response && response.payload && response.payload.errorCode === 0) {\r\n            toast.success(response.payload.errorMessage)\r\n            props.passwordModalClose()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Modal show={props.passwordModalShow} onHide={props.passwordModalClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Send new password to your email</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <form className=\"row g-3\">\r\n                        <div className=\"col-12\">\r\n                            <label htmlFor=\"email\">Email</label>\r\n                            <input\r\n                                value={email}\r\n                                onChange={(event) => setEmail(event.target.value)}\r\n                                id='email' type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Enter your email\" />\r\n                        </div>\r\n                    </form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={props.passwordModalClose}>\r\n                        Close\r\n                    </Button>\r\n                    <Button variant=\"btn btn-primary\" onClick={() => handleSendNewPassword()}>\r\n                        Send\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ModalForgotPassword;","import React, { useEffect, useState } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport './Login.scss';\r\nimport { toast } from 'react-toastify';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { loginUser } from '../../slices/userSlice';\r\nimport LoadingSpinner from '../LoadingSpinner/LoadingSpinner'\r\nimport ModalForgotPassword from './ModalForgotPassword'\r\n\r\nconst Login = (props) => {\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n\r\n    const isLogging = useSelector(state => state.user.isLogging)\r\n    const isAuthenticated = useSelector(state => state.user.isAuthenticated)\r\n    const user = useSelector(state => state.user.user)\r\n\r\n    const [showPassword, setShowPassword] = useState(false)\r\n    const [email, setEmail] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n\r\n    // modal forgot password\r\n    const [showModalForgotPassword, setShowModalForgotPassword] = useState(false)\r\n    const isRenewingPassword = useSelector(state => state.user.isRenewingPassword)\r\n\r\n    useEffect(() => {\r\n        if (isAuthenticated && user) {\r\n            history.push('/')\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n    const handleRegisterPageBtn = () => {\r\n        history.push('/register')\r\n    }\r\n\r\n    const checkValidEmail = () => {\r\n        let regx = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|.(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n        if (!regx.test(email)) {\r\n            // toast.error(\"Your email address is not valid\")\r\n\r\n            return false\r\n        }\r\n        return true\r\n    }\r\n\r\n    const handleLoginBtn = async () => {\r\n        if (!email) {\r\n            toast.error(\"Please enter your email address\")\r\n            return false\r\n        }\r\n\r\n        let validEmail = checkValidEmail()\r\n        if (!validEmail) {\r\n            toast.error(\"Your email address is not valid\")\r\n            return false\r\n        }\r\n\r\n        if (!password) {\r\n            toast.error(\"Please enter your password\")\r\n            return false\r\n        }\r\n\r\n        let userData = { email, password }\r\n\r\n        // call api\r\n        let response = await dispatch(loginUser(userData))\r\n\r\n        if (response\r\n            && response.payload\r\n            && response.payload.response\r\n            && response.payload.response.data\r\n            && response.payload.response.data.errorCode !== 0\r\n        ) {\r\n            toast.error(response.payload.response.data.errorMessage)\r\n        }\r\n\r\n        if (response && response.payload && response.payload.errorCode === 0) {\r\n            toast.success(response.payload.errorMessage)\r\n            setEmail(\"\")\r\n            setPassword(\"\")\r\n            history.push('/')\r\n        }\r\n    }\r\n\r\n    const handlePressEnter = (event) => {\r\n        if (event.key === 'Enter' && event.keyCode === 13) {\r\n            handleLoginBtn()\r\n        }\r\n    }\r\n\r\n    const handleForgotPasswordSpan = () => {\r\n        setShowModalForgotPassword(true)\r\n    }\r\n\r\n    const handleForgotPasswordModalClose = () => {\r\n        setShowModalForgotPassword(false)\r\n    }\r\n\r\n    const handleComeBackBtn = () => {\r\n        history.push('/')\r\n    }\r\n\r\n    if (isLogging || isRenewingPassword) {\r\n        return (\r\n            <LoadingSpinner />\r\n        )\r\n    } else {\r\n        return (\r\n            <div className='login-background'>\r\n                <div className='container'>\r\n                    <div className='row'>\r\n                        <div className='col-3'></div>\r\n                        <div className='login-container col-12 col-md-6 col-lg-6'>\r\n                            <div className='login-content row'>\r\n                                <form className=\"row g-3\">\r\n                                    <div className='col-12 login-title'>LOGIN</div>\r\n                                    <div className='col-12 mt-3'>\r\n                                        <label htmlFor=\"email\">Email</label>\r\n                                        <input\r\n                                            value={email}\r\n                                            onChange={(event) => setEmail(event.target.value)}\r\n                                            id='email'\r\n                                            type='text'\r\n                                            className='form-control'\r\n                                            placeholder='Enter your email'\r\n                                        />\r\n                                    </div>\r\n                                    <div className='col-12 mt-3'>\r\n                                        <label htmlFor=\"password\">Password</label>\r\n                                        <div className='input-password'>\r\n                                            <input\r\n                                                onKeyDown={(event) => handlePressEnter(event)}\r\n                                                value={password}\r\n                                                onChange={(event) => setPassword(event.target.value)}\r\n                                                id='password'\r\n                                                type={showPassword ? 'text' : 'password'}\r\n                                                className='form-control'\r\n                                                placeholder='Enter your password'\r\n                                            />\r\n                                            <span\r\n                                                onClick={() => setShowPassword(!showPassword)}\r\n                                            >\r\n                                                <i className={showPassword ? 'fas fa-eye' : 'fas fa-eye-slash'}></i>\r\n                                            </span>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='col-12 mt-3'>\r\n                                        <button\r\n                                            onClick={() => handleLoginBtn()}\r\n                                            className='customized-btn'\r\n                                            type='button' >\r\n                                            Login\r\n                                        </button>\r\n                                    </div>\r\n                                    <div className='col-12 mt-3'>\r\n                                        <span\r\n                                            onClick={() => handleForgotPasswordSpan()}\r\n                                            className='forgot-password'\r\n                                        >\r\n                                            Forgot your password?\r\n                                        </span>\r\n                                    </div>\r\n\r\n                                    <hr className='mt-3' />\r\n\r\n                                    <div className='col-12'>\r\n                                        <button\r\n                                            onClick={() => handleRegisterPageBtn()}\r\n                                            className='customized-btn'\r\n                                            type='button'\r\n                                        >\r\n                                            Create a new account\r\n                                        </button>\r\n                                    </div>\r\n\r\n                                    {/* <hr className='mt-3' /> */}\r\n\r\n                                    <div className='col-12 my-3'>\r\n                                        <button\r\n                                            onClick={() => handleComeBackBtn()}\r\n                                            className='btn btn-comback-customize'\r\n                                        >Come Back\r\n                                        </button>\r\n                                    </div>\r\n\r\n                                    {/* <div className='col-12 text-center mt-3'>\r\n                                        <span>Or Login with:</span>\r\n                                    </div>\r\n                                    <div className='col-12 login-social'>\r\n                                        <i className=\"fab fa-google google\"></i>\r\n                                        <i className='fab fa-facebook-f facebook'></i>\r\n                                    </div> */}\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                        <div className='col-3'></div>\r\n                    </div>\r\n\r\n                    <ModalForgotPassword\r\n                        passwordModalShow={showModalForgotPassword}\r\n                        passwordModalClose={handleForgotPasswordModalClose}\r\n                    />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login;","import React, { useState, useEffect } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport './Register.scss';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { registerNewUser } from '../../slices/userSlice'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport LoadingSpinner from '../LoadingSpinner/LoadingSpinner'\r\n\r\nconst Register = (props) => {\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n    const isAuthenticated = useSelector(state => state.user.isAuthenticated)\r\n    const user = useSelector(state => state.user.user)\r\n    const isRegistering = useSelector(state => state.user.isRegistering)\r\n\r\n    const [showPassword, setShowPassword] = useState(false)\r\n    const [showConfirmPassword, setShowConfirmPassword] = useState(false)\r\n\r\n    const [email, setEmail] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    const [confirmPassword, setConfirmPassword] = useState(\"\")\r\n    const [firstName, setFirstName] = useState(\"\")\r\n    const [lastName, setLastName] = useState(\"\")\r\n    const [address, setAddress] = useState(\"\")\r\n    const [phoneNumber, setPhoneNumber] = useState(\"\")\r\n    const [gender, setGender] = useState(\"\")\r\n    const [groupId, setGroupId] = useState(\"\")\r\n\r\n    const checkValidateInput = () => {\r\n        let arrInput = [email, password, confirmPassword, firstName, lastName, address, phoneNumber, gender, groupId]\r\n        let arrInputName = ['email', 'password', 'confirmPassword', 'firstName', 'lastName', 'address', 'phoneNumber', 'gender', 'groupId']\r\n        for (let i = 0; i < arrInput.length; i++) {\r\n            if (!arrInput[i]) {\r\n                toast.error(\"Missing parameter: \" + arrInputName[i])\r\n                return false\r\n            }\r\n        }\r\n        return true\r\n    }\r\n\r\n    const checkConfirmPassword = () => {\r\n        if (!(password === confirmPassword)) {\r\n            toast.error(\"Your confirmPassword is incorrect\")\r\n\r\n            return false\r\n        }\r\n        return true\r\n    }\r\n\r\n    const checkLengthPassword = () => {\r\n        if (!(password.length >= 8)) {\r\n            toast.error(\"Your password is too short\")\r\n\r\n            return false\r\n        }\r\n        return true\r\n    }\r\n\r\n    const checkValidEmail = () => {\r\n        let regx = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|.(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n        if (!regx.test(email)) {\r\n            toast.error(\"Your email address is not valid\")\r\n\r\n            return false\r\n        }\r\n        return true\r\n    }\r\n\r\n    const handleRegisterBtn = async () => {\r\n        let validInput = checkValidateInput()\r\n        if (validInput) {\r\n            let validEmail = checkValidEmail()\r\n            if (validEmail) {\r\n                let validPassword = checkLengthPassword()\r\n                if (validPassword) {\r\n                    let validConfirmPassword = checkConfirmPassword()\r\n                    if (validConfirmPassword) {\r\n                        let userData = { email, password, confirmPassword, firstName, lastName, address, phoneNumber, gender, groupId }\r\n                        let response = await dispatch(registerNewUser(userData))\r\n\r\n                        // check error\r\n                        if (response\r\n                            && response.payload\r\n                            && response.payload.response\r\n                            && response.payload.response.data\r\n                            && response.payload.response.data.errorCode !== 0\r\n                        ) {\r\n                            toast.error(response.payload.response.data.errorMessage)\r\n                        }\r\n\r\n                        if (response && response.payload && response.payload.errorCode === 0) {\r\n                            toast.success(response.payload.errorMessage)\r\n\r\n                            setEmail(\"\")\r\n                            setPassword(\"\")\r\n                            setConfirmPassword(\"\")\r\n                            setAddress(\"\")\r\n                            setFirstName(\"\")\r\n                            setLastName(\"\")\r\n                            setPhoneNumber(\"\")\r\n                            setGender(\"\")\r\n                            setGroupId(\"\")\r\n                            history.push('/login')\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (isAuthenticated && user) {\r\n            history.push('/')\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n    const handleComeBackBtn = () => {\r\n        history.push('/login')\r\n    }\r\n\r\n    if (isRegistering) {\r\n        return (\r\n            <LoadingSpinner />\r\n        )\r\n    } else {\r\n        return (\r\n            <div className='register-background'>\r\n                <div className='container'>\r\n                    <div className='row'>\r\n                        <div className='col-3'></div>\r\n                        <div className='register-container col-12 col-md-6 col-lg-6'>\r\n                            <div className=\"register-content row\">\r\n                                <form className=\"row g-2\">\r\n                                    <div className='col-12 register-title'>REGISTER</div>\r\n                                    <div className=\"col-12\">\r\n                                        <label htmlFor=\"inputEmail\">Email</label>\r\n                                        <input\r\n                                            value={email}\r\n                                            onChange={(event) => setEmail(event.target.value)}\r\n                                            id='inputEmail'\r\n                                            type=\"email\"\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"example@gmail.com\" />\r\n                                    </div>\r\n                                    <div className=\"col-12\">\r\n                                        <label htmlFor=\"inputPassword\">Password</label>\r\n\r\n                                        <div className='input-password'>\r\n                                            <input\r\n                                                value={password}\r\n                                                onChange={(event) => setPassword(event.target.value)}\r\n                                                id='password'\r\n                                                type={showPassword ? 'text' : 'password'}\r\n                                                className=\"form-control\"\r\n                                                placeholder='Enter your password'\r\n                                            />\r\n                                            <span\r\n                                                onClick={() => setShowPassword(!showPassword)}\r\n                                            >\r\n                                                <i className={showPassword ? 'fas fa-eye' : 'fas fa-eye-slash'}></i>\r\n                                            </span>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                    <div className=\"col-12\">\r\n                                        <label htmlFor=\"inputConfirmPassword\">Confirm Password</label>\r\n\r\n                                        <div className='input-password'>\r\n                                            <input\r\n                                                value={confirmPassword}\r\n                                                onChange={(event) => setConfirmPassword(event.target.value)}\r\n                                                id='inputConfirmPassword'\r\n                                                type={showConfirmPassword ? 'text' : 'password'}\r\n                                                className=\"form-control\"\r\n                                                placeholder='Confirm your Password'\r\n                                            />\r\n                                            <span\r\n                                                onClick={() => setShowConfirmPassword(!showConfirmPassword)}\r\n                                            >\r\n                                                <i className={showConfirmPassword ? 'fas fa-eye' : 'fas fa-eye-slash'}></i>\r\n                                            </span>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-6\">\r\n                                        <label htmlFor=\"inputFirstName\">First name</label>\r\n                                        <input\r\n                                            value={firstName}\r\n                                            onChange={(event) => setFirstName(event.target.value)}\r\n                                            id='inputFirstName' type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"First name\" />\r\n                                    </div>\r\n                                    <div className=\"col-6\">\r\n                                        <label htmlFor=\"inputLastName\">Last name</label>\r\n                                        <input\r\n                                            value={lastName}\r\n                                            onChange={(event) => setLastName(event.target.value)}\r\n                                            id='inputLastName' type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"Last name\" />\r\n                                    </div>\r\n\r\n                                    <div className=\"col-12\">\r\n                                        <label htmlFor=\"inputAddress\">Address</label>\r\n                                        <input\r\n                                            value={address}\r\n                                            onChange={(event) => setAddress(event.target.value)}\r\n                                            id='inputAddress' type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"1234 Main St\" />\r\n                                    </div>\r\n\r\n                                    <div className=\"col-4\">\r\n                                        <label htmlFor=\"inputPhoneNumber\">Phone</label>\r\n                                        <input\r\n                                            value={phoneNumber}\r\n                                            onChange={(event) => setPhoneNumber(event.target.value)}\r\n                                            id='inputPhoneNumber' type=\"text\"\r\n                                            className=\"form-control\"\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"col-4\">\r\n                                        <label htmlFor=\"inputGender\">Gender</label>\r\n                                        <select\r\n                                            value={gender}\r\n                                            onChange={(event) => setGender(event.target.value)}\r\n                                            id='inputGender'\r\n                                            className=\"form-select\"\r\n                                        >\r\n                                            <option hidden></option>\r\n                                            <option value=\"1\">Male</option>\r\n                                            <option value=\"0\">Female</option>\r\n                                        </select>\r\n                                    </div>\r\n                                    <div className=\"col-4\">\r\n                                        <label htmlFor=\"inputGroupId\">Group</label>\r\n                                        <select\r\n                                            value={groupId}\r\n                                            onChange={(event) => setGroupId(event.target.value)}\r\n                                            id='inputGroupId'\r\n                                            className=\"form-select\"\r\n                                        >\r\n                                            <option hidden></option>\r\n                                            <option value=\"2\">Customer</option>\r\n                                            <option value=\"1\">Worker</option>\r\n                                            <option value=\"3\">Manager</option>\r\n                                        </select>\r\n                                    </div>\r\n                                    <hr className='mt-3' />\r\n                                    <div className='col-12 mt-3'>\r\n                                        <button\r\n                                            onClick={() => handleRegisterBtn()}\r\n                                            className='customized-btn' type='button'\r\n                                        >\r\n                                            Register\r\n                                        </button>\r\n                                    </div>\r\n                                    <div className='col-12 my-3'>\r\n                                        <button\r\n                                            onClick={() => handleComeBackBtn()}\r\n                                            className='btn btn-comback-customize'\r\n                                        >Come Back\r\n                                        </button>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                        <div className='col-3'></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Register;","import Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\n\r\nconst ModalDelete = (props) => {\r\n    return (\r\n        <>\r\n            <Modal show={props.show} onHide={props.handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Confirm delete user</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>Are you sure to delete this user: {props.dataModalDelete.email}?</Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={props.handleClose}>\r\n                        Close\r\n                    </Button>\r\n                    <Button variant=\"btn btn-danger\" onClick={props.handleDeleteUser}>\r\n                        Confirm\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ModalDelete;","import Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport React, { useEffect, useState } from 'react';\r\nimport _ from 'lodash';\r\nimport { updateUser } from '../../slices/userSlice'\r\nimport { useDispatch } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport { fetchAllUsers } from '../../slices/userSlice';\r\n\r\nconst ModalUpdateUser = (props) => {\r\n    const defaultState = {\r\n        firstName: '',\r\n        lastName: '',\r\n        address: '',\r\n        phoneNumber: '',\r\n        gender: '',\r\n        // groupId: '',\r\n    }\r\n\r\n    const dataModalUpdate = props.dataModalUpdate\r\n    const page = props.page\r\n    const limit = props.limit\r\n\r\n    const [user, setUser] = useState(defaultState)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        if (dataModalUpdate) {\r\n            setUser(dataModalUpdate)\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [dataModalUpdate])\r\n\r\n    const handleOnchangeInput = (value, name) => {\r\n        let _userData = _.cloneDeep(user)\r\n        _userData[name] = value\r\n        setUser(_userData)\r\n    }\r\n\r\n    const handleUpdateUser = async () => {\r\n        let response = await dispatch(updateUser(user))\r\n\r\n        if (response\r\n            && response.payload\r\n            && response.payload.response\r\n            && response.payload.response.data\r\n            && response.payload.response.data.errorCode !== 0\r\n        ) {\r\n            toast.error(response.payload.response.data.errorMessage)\r\n        }\r\n\r\n        if (response && response.payload && response.payload.errorCode === 0) {\r\n            toast.success(response.payload.errorMessage)\r\n            props.handleUpdateClose()\r\n            let pagination = { page, limit }\r\n            dispatch(fetchAllUsers(pagination))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Modal show={props.updateShow} onHide={props.handleUpdateClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Update User: {dataModalUpdate.email}</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <form className=\"row g-3\">\r\n                        <div className=\"col-6\">\r\n                            <label htmlFor=\"inputFirstName\">First name</label>\r\n                            <input\r\n                                value={user.firstName}\r\n                                onChange={(event) => handleOnchangeInput(event.target.value, \"firstName\")}\r\n                                id='inputFirstName' type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"First name\" />\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                            <label htmlFor=\"inputLastName\">Last name</label>\r\n                            <input\r\n                                value={user.lastName}\r\n                                onChange={(event) => handleOnchangeInput(event.target.value, \"lastName\")}\r\n                                id='inputLastName' type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Last name\" />\r\n                        </div>\r\n\r\n                        <div className=\"col-12\">\r\n                            <label htmlFor=\"inputAddress\">Address</label>\r\n                            <input\r\n                                value={user.address}\r\n                                onChange={(event) => handleOnchangeInput(event.target.value, \"address\")}\r\n                                id='inputAddress' type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"1234 Main St\" />\r\n                        </div>\r\n\r\n                        <div className=\"col-6\">\r\n                            <label htmlFor=\"inputPhoneNumber\">Phone number</label>\r\n                            <input\r\n                                value={user.phoneNumber}\r\n                                onChange={(event) => handleOnchangeInput(event.target.value, \"phoneNumber\")}\r\n                                id='inputPhoneNumber' type=\"text\"\r\n                                className=\"form-control\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                            <label htmlFor=\"inputGender\">Gender</label>\r\n                            <select\r\n                                value={user.gender}\r\n                                onChange={(event) => handleOnchangeInput(event.target.value, \"gender\")}\r\n                                id='inputGender'\r\n                                className=\"form-select\"\r\n                            >\r\n                                <option hidden></option>\r\n                                <option value=\"1\">Male</option>\r\n                                <option value=\"0\">Female</option>\r\n                            </select>\r\n                        </div>\r\n                        {/* <div className=\"col-4\">\r\n                            <label htmlFor=\"inputGroupId\">Group</label>\r\n                            <select\r\n                                value={user.groupId}\r\n                                onChange={(event) => handleOnchangeInput(event.target.value, \"groupId\")}\r\n                                id='inputGroupId'\r\n                                className=\"form-select\"\r\n                            >\r\n                                <option hidden></option>\r\n                                <option value=\"1\">Worker</option>\r\n                                <option value=\"2\">Customer</option>\r\n                                <option value=\"3\">Manager</option>\r\n                            </select>\r\n                        </div> */}\r\n                    </form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={props.handleUpdateClose}>\r\n                        Close\r\n                    </Button>\r\n                    <Button variant=\"btn btn-primary\" onClick={() => handleUpdateUser()}>\r\n                        Update\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ModalUpdateUser;","import React, { useEffect, useState } from 'react';\r\nimport './User.scss';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchAllUsers } from '../../slices/userSlice';\r\nimport ReactPaginate from 'react-paginate';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport LoadingSpinner from '../LoadingSpinner/LoadingSpinner'\r\nimport { deleteUser } from '../../slices/userSlice'\r\nimport { toast } from 'react-toastify';\r\nimport ModalDeleteUser from './ModalDeleteUser';\r\nimport ModalUpdateUser from './ModalUpdateUser';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\nconst User = (props) => {\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n    const [scrollHeight, setScrollHeight] = useState(0)\r\n    const [scrollWidth, setScrollWidth] = useState(0)\r\n\r\n    // pagination\r\n    const totalPages = useSelector(state => state.user.totalPages)\r\n    const listUsers = useSelector(state => state.user.listUsers)\r\n    const isLoadingAllUsers = useSelector(state => state.user.isLoadingAllUsers)\r\n    const [page, setPage] = useState(1)\r\n    // eslint-disable-next-line\r\n    const [limit, setLimit] = useState(4)\r\n\r\n    // delete modal\r\n    const isDeletingUser = useSelector(state => state.user.isDeletingUser)\r\n    const [showModalDelete, setShowModalDelete] = useState(false)\r\n    const [dataModalDelete, setDataModal] = useState({})\r\n\r\n    // update modal\r\n    const isUpdatingUser = useSelector(state => state.user.isUpdatingUser)\r\n    const [showModalUpdate, setShowModalUpdate] = useState(false)\r\n    const [dataModalUpdate, setDataModalUpdate] = useState({})\r\n\r\n    useEffect(() => {\r\n        let pagination = { page, limit }\r\n        dispatch(fetchAllUsers(pagination))\r\n        // eslint-disable-next-line\r\n    }, [page])\r\n\r\n    useEffect(() => {\r\n        let windowWidth = window.innerWidth\r\n        let windowHeight = window.innerHeight\r\n        setScrollHeight(windowHeight)\r\n        setScrollWidth(windowWidth)\r\n    }, [scrollWidth, scrollHeight])\r\n\r\n    // this function is from react-paginate\r\n    const handlePageClick = (event) => {\r\n        setPage(event.selected + 1)\r\n    }\r\n\r\n    const handleDetailBtn = (data) => {\r\n        history.push(`/user/detail?id=${data.id}`)\r\n    }\r\n\r\n    const handleDeleteBtn = (user) => {\r\n        setDataModal(user)\r\n        setShowModalDelete(true)\r\n    }\r\n\r\n    const handleCloseDeleteModal = () => {\r\n        setDataModal({})\r\n        setShowModalDelete(false);\r\n    }\r\n\r\n    const handleDeleteUser = async () => {\r\n        let userId = dataModalDelete.id\r\n        let response = await dispatch(deleteUser(userId))\r\n        if (response\r\n            && response.payload\r\n            && response.payload.response\r\n            && response.payload.response.data\r\n            && response.payload.response.data.errorCode !== 0\r\n        ) {\r\n            toast.error(response.payload.response.data.errorMessage)\r\n        }\r\n\r\n        if (response && response.payload && response.payload.errorCode === 0) {\r\n            let pagination = { page, limit }\r\n            await dispatch(fetchAllUsers(pagination))\r\n            toast.success(response.payload.errorMessage)\r\n            setShowModalDelete(false)\r\n        }\r\n    }\r\n\r\n    const handleUpdateBtn = (user) => {\r\n        setShowModalUpdate(true)\r\n        setDataModalUpdate(user)\r\n    }\r\n\r\n    const handleCloseUpdateModal = () => {\r\n        setShowModalUpdate(false)\r\n        setDataModalUpdate({})\r\n    }\r\n\r\n    return (\r\n        <Scrollbars style={{ width: scrollWidth, height: scrollHeight }}>\r\n            <div className='users-container' >\r\n                <div className=\"container\">\r\n                    <h1 className='user-title'>MANAGE USER</h1>\r\n\r\n                    <table className=\"table table-hover customers mt-3\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th scope=\"col\">ID</th>\r\n                                <th scope=\"col\">Email</th>\r\n                                <th scope=\"col\">FirstName</th>\r\n                                <th scope=\"col\">LastName</th>\r\n                                <th scope=\"col\">Group</th>\r\n                                <th scope=\"col\">Actions</th>\r\n                            </tr>\r\n                        </thead>\r\n                        {(isLoadingAllUsers || isDeletingUser || isUpdatingUser) ?\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td colSpan={6}><LoadingSpinner /></td>\r\n                                </tr>\r\n                            </tbody>\r\n                            :\r\n                            <tbody>\r\n                                {listUsers && listUsers.length > 0 ?\r\n                                    listUsers.map((item, index) => (\r\n                                        <tr key={`user-${index}`}>\r\n                                            <td>{item.id}</td>\r\n                                            <td>{item.email}</td>\r\n                                            <td>{item.firstName}</td>\r\n                                            <td>{item.lastName}</td>\r\n                                            <td>{item.Group.name}</td>\r\n                                            <td>\r\n                                                <div className='action-container'>\r\n                                                    <button\r\n                                                        onClick={() => handleUpdateBtn(item)}\r\n                                                        className='btn btn-warning'\r\n                                                    >\r\n                                                        Edit\r\n                                                    </button>\r\n                                                    <button\r\n                                                        onClick={() => handleDeleteBtn(item)}\r\n                                                        className='btn btn-danger'>\r\n                                                        Delete\r\n                                                    </button>\r\n                                                    <button\r\n                                                        className='btn btn-success'\r\n                                                        onClick={() => handleDetailBtn(item)}\r\n                                                    >\r\n                                                        Detail\r\n                                                    </button>\r\n                                                </div>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))\r\n                                    :\r\n                                    <tr>\r\n                                        <td colSpan={6}>\r\n                                            {/* <h3 className='table-notify'>You don't have permission with this page</h3> */}\r\n                                        </td>\r\n                                    </tr>\r\n                                }\r\n                            </tbody>\r\n                        }\r\n                    </table>\r\n\r\n                    {totalPages && totalPages > 0 &&\r\n                        <ReactPaginate\r\n                            nextLabel=\"next >\"\r\n                            onPageChange={handlePageClick}\r\n                            pageRangeDisplayed={2}\r\n                            marginPagesDisplayed={2}\r\n                            pageCount={totalPages}\r\n                            previousLabel=\"< previous\"\r\n                            pageClassName=\"page-item\"\r\n                            pageLinkClassName=\"page-link\"\r\n                            previousClassName=\"page-item\"\r\n                            previousLinkClassName=\"page-link\"\r\n                            nextClassName=\"page-item\"\r\n                            nextLinkClassName=\"page-link\"\r\n                            breakLabel=\"...\"\r\n                            breakClassName=\"page-item\"\r\n                            breakLinkClassName=\"page-link\"\r\n                            containerClassName=\"pagination\"\r\n                            activeClassName=\"active\"\r\n                            renderOnZeroPageCount={null}\r\n                        />\r\n                    }\r\n                </div>\r\n\r\n                <ModalDeleteUser\r\n                    show={showModalDelete}\r\n                    handleClose={handleCloseDeleteModal}\r\n                    dataModalDelete={dataModalDelete}\r\n                    handleDeleteUser={handleDeleteUser}\r\n                />\r\n\r\n                <ModalUpdateUser\r\n                    updateShow={showModalUpdate}\r\n                    handleUpdateClose={handleCloseUpdateModal}\r\n                    dataModalUpdate={dataModalUpdate}\r\n                    page={page}\r\n                    limit={limit}\r\n                />\r\n            </div>\r\n        </Scrollbars>\r\n    )\r\n}\r\n\r\nexport default User;","import Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport React, { useState } from 'react';\r\nimport { creatNewCar } from '../../slices/carSlice';\r\nimport { useDispatch } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport { getAllCars } from '../../slices/carSlice'\r\n\r\nconst ModalCreateCar = (props) => {\r\n\r\n    const page = props.page\r\n    const limit = props.limit\r\n\r\n    const [name, setName] = useState('')\r\n    const [model, setModel] = useState('')\r\n    const [description, setDescription] = useState('')\r\n    const [image, setImage] = useState('')\r\n    const dispatch = useDispatch()\r\n\r\n    const validateInput = () => {\r\n        let isValid = true\r\n\r\n        let arrInput = [name, model, description, image]\r\n        let arrInputName = ['name', 'model', 'description', 'image']\r\n        for (let i = 0; i < arrInput.length; i++) {\r\n            if (!arrInput[i]) {\r\n                isValid = false\r\n                toast.error(`Missing parameter ${arrInputName[i]}`)\r\n                return\r\n            }\r\n        }\r\n        return isValid\r\n    }\r\n\r\n    const handleCreateNewCar = async () => {\r\n        let isInputValid = validateInput()\r\n\r\n        if (isInputValid) {\r\n            let car = { name, model, description, image }\r\n            let response = await dispatch(creatNewCar(car))\r\n\r\n            if (response\r\n                && response.payload\r\n                && response.payload.response\r\n                && response.payload.response.data\r\n                && response.payload.response.data.errorCode !== 0\r\n            ) {\r\n                toast.error(response.payload.response.data.errorMessage)\r\n            }\r\n\r\n            if (response && response.payload && response.payload.errorCode === 0) {\r\n                setName(\"\")\r\n                setModel(\"\")\r\n                setDescription(\"\")\r\n                setImage(\"\")\r\n                toast.success(response.payload.errorMessage)\r\n                props.createCarClose()\r\n                let pagination = { page, limit }\r\n                dispatch(getAllCars(pagination))\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Modal size=\"lg\" show={props.createCarShow} onHide={props.createCarClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Create a new car</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <form className=\"row g-3\">\r\n                        <div className=\"col-8\">\r\n                            <label htmlFor=\"carName\">Car name</label>\r\n                            <input\r\n                                value={name}\r\n                                onChange={(event) => setName(event.target.value)}\r\n                                id='carName' type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"name\" />\r\n                        </div>\r\n                        <div className=\"col-4\">\r\n                            <label htmlFor=\"model\">Car model</label>\r\n                            <select\r\n                                value={model}\r\n                                onChange={(event) => setModel(event.target.value)}\r\n                                id='model'\r\n                                className=\"form-select\"\r\n                            >\r\n                                <option hidden></option>\r\n                                <option value=\"bmw\">bmw</option>\r\n                                <option value=\"ferrari\">ferrari</option>\r\n                                <option value=\"lamborghini\">lamborghini</option>\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"col-12\">\r\n                            <label htmlFor=\"carDescription\">Car description</label>\r\n                            <textarea\r\n                                style={{ height: '300px' }}\r\n                                value={description}\r\n                                onChange={(event) => setDescription(event.target.value)}\r\n                                id='carDescription' type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"description\" />\r\n                        </div>\r\n                        <div className=\"col-12\">\r\n                            <label htmlFor=\"carImage\">Car image url</label>\r\n                            <input\r\n                                value={image}\r\n                                onChange={(event) => setImage(event.target.value)}\r\n                                id='carImage' type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"enter image url\" />\r\n                        </div>\r\n                    </form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={props.createCarClose}>\r\n                        Close\r\n                    </Button>\r\n                    <Button variant=\"btn btn-primary\" onClick={() => handleCreateNewCar()}>\r\n                        Create\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ModalCreateCar;","import Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\n\r\nconst ModalDeleteCar = (props) => {\r\n\r\n    return (\r\n        <>\r\n            <Modal show={props.deleteCarShow} onHide={props.deleteCarClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Confirm delete car</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>Are you sure to delete this car: {props.dataDeleteModal?.name}?</Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={props.deleteCarClose}>\r\n                        Close\r\n                    </Button>\r\n                    <Button variant=\"btn btn-danger\" onClick={props.handleDeleteCar}>\r\n                        Confirm\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ModalDeleteCar;","import Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { updateCar } from '../../slices/carSlice';\r\nimport { useDispatch } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport { getAllCars } from '../../slices/carSlice'\r\nimport _ from 'lodash';\r\n\r\nconst ModalUpdateCar = (props) => {\r\n    const dataUpdateModal = props.dataUpdateModal\r\n    const page = props.page\r\n    const limit = props.limit\r\n\r\n    const defaultState = {\r\n        name: '',\r\n        model: '',\r\n        description: '',\r\n        image: '',\r\n    }\r\n\r\n    const [car, setCar] = useState(defaultState)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        if (dataUpdateModal) {\r\n            setCar(dataUpdateModal)\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [dataUpdateModal])\r\n\r\n    const handleOnchangeInput = (value, name) => {\r\n        let _copyCar = _.cloneDeep(car)\r\n        _copyCar[name] = value\r\n        setCar(_copyCar)\r\n    }\r\n\r\n    const handleUpdateCar = async () => {\r\n        let response = await dispatch(updateCar(car))\r\n\r\n        if (response\r\n            && response.payload\r\n            && response.payload.response\r\n            && response.payload.response.data\r\n            && response.payload.response.data.errorCode !== 0\r\n        ) {\r\n            toast.error(response.payload.response.data.errorMessage)\r\n        }\r\n\r\n        if (response && response.payload && response.payload.errorCode === 0) {\r\n            toast.success(response.payload.errorMessage)\r\n            props.updateCarClose()\r\n            let pagination = { page, limit }\r\n            dispatch(getAllCars(pagination))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Modal size=\"lg\" show={props.updateCarShow} onHide={props.updateCarClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Update a car: {dataUpdateModal?.name}</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <form className=\"row g-3\">\r\n                        <div className=\"col-8\">\r\n                            <label htmlFor=\"carName\">Car name</label>\r\n                            <input\r\n                                value={car.name}\r\n                                onChange={(event) => handleOnchangeInput(event.target.value, \"name\")}\r\n                                id='carName' type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"name\" />\r\n                        </div>\r\n                        <div className=\"col-4\">\r\n                            <label htmlFor=\"model\">Car model</label>\r\n                            <select\r\n                                value={car.model}\r\n                                onChange={(event) => handleOnchangeInput(event.target.value, \"model\")}\r\n                                id='model'\r\n                                className=\"form-select\"\r\n                            >\r\n                                <option hidden></option>\r\n                                <option value=\"bmw\">bmw</option>\r\n                                <option value=\"ferrari\">ferrari</option>\r\n                                <option value=\"lamborghini\">lamborghini</option>\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"col-12\">\r\n                            <label htmlFor=\"carDescription\">Car description</label>\r\n                            <textarea\r\n                                style={{ height: '300px' }}\r\n                                value={car.description}\r\n                                onChange={(event) => handleOnchangeInput(event.target.value, \"description\")}\r\n                                id='carDescription' type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"description\" />\r\n                        </div>\r\n                        <div className=\"col-12\">\r\n                            <label htmlFor=\"carImage\">Car image url</label>\r\n                            <input\r\n                                value={car.image}\r\n                                onChange={(event) => handleOnchangeInput(event.target.value, \"image\")}\r\n                                id='carImage' type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"enter image url\" />\r\n                        </div>\r\n                    </form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={props.updateCarClose}>\r\n                        Close\r\n                    </Button>\r\n                    <Button variant=\"btn btn-primary\" onClick={() => handleUpdateCar()}>\r\n                        Save\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ModalUpdateCar;","import React, { useEffect, useState } from 'react';\r\nimport './Car.scss';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport ReactPaginate from 'react-paginate';\r\nimport { toast } from 'react-toastify';\r\nimport LoadingSpinner from '../LoadingSpinner/LoadingSpinner'\r\nimport { getAllCars } from '../../slices/carSlice'\r\nimport { deleteCar } from '../../slices/carSlice'\r\nimport ModalCreateCar from './ModalCreateCar'\r\nimport ModalDeleteCar from './ModalDeleteCar';\r\nimport ModalUpdateCar from './ModalUpdateCar';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\nconst Car = (props) => {\r\n    const dispatch = useDispatch();\r\n    const [scrollHeight, setScrollHeight] = useState(0)\r\n    const [scrollWidth, setScrollWidth] = useState(0)\r\n\r\n    // pagination\r\n    const totalCarPages = useSelector(state => state.car.totalCarPages)\r\n    const carList = useSelector(state => state.car.carList)\r\n    const isLoadingAllCars = useSelector(state => state.car.isLoadingAllUsers)\r\n    const [page, setPage] = useState(1)\r\n    // eslint-disable-next-line\r\n    const [limit, setLimit] = useState(4)\r\n\r\n    // create new car\r\n    const [createModalShow, setCreateModalShow] = useState(false)\r\n    const isCreatingCar = useSelector(state => state.car.isCreatingCar)\r\n\r\n    // delete car\r\n    const [deleteModalShow, setDeleteModalShow] = useState(false)\r\n    const [dataDeleteModal, setDataDeleteModal] = useState({})\r\n    const isDeletingCar = useSelector(state => state.car.isDeletingCar)\r\n\r\n    // update car\r\n    const [updateModalShow, setUpdateModalShow] = useState(false)\r\n    const [dataUpdateModal, setDataUpdateModal] = useState({})\r\n    const isUpdatingCar = useSelector(state => state.car.isUpdatingCar)\r\n\r\n    useEffect(() => {\r\n        let pagination = { page, limit }\r\n        dispatch(getAllCars(pagination))\r\n        // eslint-disable-next-line\r\n    }, [page])\r\n\r\n    useEffect(() => {\r\n        let windowWidth = window.innerWidth\r\n        let windowHeight = window.innerHeight\r\n        setScrollHeight(windowHeight)\r\n        setScrollWidth(windowWidth)\r\n    }, [scrollWidth, scrollHeight])\r\n\r\n    // this function is from react-paginate\r\n    const handlePageClick = (event) => {\r\n        setPage(event.selected + 1)\r\n    }\r\n\r\n    const handleCreateCarBtn = () => {\r\n        setCreateModalShow(true)\r\n    }\r\n\r\n    const handleCreateCarClose = () => {\r\n        setCreateModalShow(false)\r\n    }\r\n\r\n    const handleDeleteCarBtn = (data) => {\r\n        setDataDeleteModal(data)\r\n        setDeleteModalShow(true)\r\n    }\r\n\r\n    const handleDeleteCarClose = () => {\r\n        setDataDeleteModal({})\r\n        setDeleteModalShow(false)\r\n    }\r\n\r\n    const handleDeleteCar = async () => {\r\n        let carId = dataDeleteModal?.id\r\n        if (carId) {\r\n            let response = await dispatch(deleteCar(carId))\r\n            if (response\r\n                && response.payload\r\n                && response.payload.response\r\n                && response.payload.response.data\r\n                && response.payload.response.data.errorCode !== 0\r\n            ) {\r\n                toast.error(response.payload.response.data.errorMessage)\r\n            }\r\n\r\n            if (response && response.payload && response.payload.errorCode === 0) {\r\n                toast.success(response.payload.errorMessage)\r\n                setDeleteModalShow(false)\r\n                let pagination = { page, limit }\r\n                dispatch(getAllCars(pagination))\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleUpdateCarBtn = (data) => {\r\n        setUpdateModalShow(true)\r\n        setDataUpdateModal(data)\r\n    }\r\n\r\n    const handleUpdateCarClose = () => {\r\n        setUpdateModalShow(false)\r\n        setDataUpdateModal({})\r\n    }\r\n\r\n    return (\r\n        <Scrollbars style={{ width: scrollWidth, height: scrollHeight }}>\r\n            <div className='car-container'>\r\n                <div className='container'>\r\n                    <h1 className='car-title'>MANAGE CAR</h1>\r\n\r\n                    {/* create new car btn */}\r\n                    <button\r\n                        onClick={() => handleCreateCarBtn()}\r\n                        className='btn btn-primary mb-2'>\r\n                        Add Car\r\n                    </button>\r\n\r\n                    {/* car table */}\r\n                    <table className=\"table table-hover customers mt-3\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th scope=\"col\">ID</th>\r\n                                <th scope=\"col\">name</th>\r\n                                <th scope=\"col\">model</th>\r\n                                <th scope=\"col\">image</th>\r\n                                <th scope=\"col\">Actions</th>\r\n                            </tr>\r\n                        </thead>\r\n                        {(isLoadingAllCars || isCreatingCar || isDeletingCar || isUpdatingCar) ?\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td colSpan={6}><LoadingSpinner /></td>\r\n                                </tr>\r\n                            </tbody>\r\n                            :\r\n                            <tbody>\r\n                                {carList && carList.length > 0 ?\r\n                                    carList.map((item, index) => (\r\n                                        <tr key={`car-${index}`}>\r\n                                            <td>{item.id}</td>\r\n                                            <td>{item.name}</td>\r\n                                            <td>{item.model}</td>\r\n                                            <td>{item.image}</td>\r\n                                            <td>\r\n                                                <div className='action-container'>\r\n                                                    <button\r\n                                                        onClick={() => handleUpdateCarBtn(item)}\r\n                                                        className='btn btn-warning'\r\n                                                    >\r\n                                                        Edit\r\n                                                    </button>\r\n                                                    <button\r\n                                                        onClick={() => handleDeleteCarBtn(item)}\r\n                                                        className='btn btn-danger'>\r\n                                                        Delete\r\n                                                    </button>\r\n                                                </div>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))\r\n                                    :\r\n                                    <tr>\r\n                                        <td colSpan={6}>\r\n\r\n                                        </td>\r\n                                    </tr>\r\n                                }\r\n                            </tbody>\r\n                        }\r\n                    </table>\r\n\r\n                    {/* pagination */}\r\n                    {\r\n                        totalCarPages && totalCarPages > 0 &&\r\n                        <ReactPaginate\r\n                            nextLabel=\"next >\"\r\n                            onPageChange={handlePageClick}\r\n                            pageRangeDisplayed={2}\r\n                            marginPagesDisplayed={2}\r\n                            pageCount={totalCarPages}\r\n                            previousLabel=\"< previous\"\r\n                            pageClassName=\"page-item\"\r\n                            pageLinkClassName=\"page-link\"\r\n                            previousClassName=\"page-item\"\r\n                            previousLinkClassName=\"page-link\"\r\n                            nextClassName=\"page-item\"\r\n                            nextLinkClassName=\"page-link\"\r\n                            breakLabel=\"...\"\r\n                            breakClassName=\"page-item\"\r\n                            breakLinkClassName=\"page-link\"\r\n                            containerClassName=\"pagination\"\r\n                            activeClassName=\"active\"\r\n                            renderOnZeroPageCount={null}\r\n                        />\r\n                    }\r\n\r\n                    <ModalCreateCar\r\n                        createCarShow={createModalShow}\r\n                        createCarClose={handleCreateCarClose}\r\n                        page={page}\r\n                        limit={limit}\r\n                    />\r\n\r\n                    <ModalDeleteCar\r\n                        deleteCarShow={deleteModalShow}\r\n                        deleteCarClose={handleDeleteCarClose}\r\n                        dataDeleteModal={dataDeleteModal}\r\n                        handleDeleteCar={handleDeleteCar}\r\n                    />\r\n\r\n                    <ModalUpdateCar\r\n                        updateCarShow={updateModalShow}\r\n                        updateCarClose={handleUpdateCarClose}\r\n                        dataUpdateModal={dataUpdateModal}\r\n                        page={page}\r\n                        limit={limit}\r\n                    />\r\n                </div>\r\n            </div >\r\n        </Scrollbars>\r\n    )\r\n}\r\n\r\nexport default Car;","// import axios from 'axios'\r\nimport axios from '../axios'\r\n\r\nconst getProcessBookingService = (pagination) => {\r\n    return axios.get(`/api/booking/get-process-bookings?page=${pagination.page}&limit=${pagination.limit}`)\r\n}\r\n\r\nconst createNewBookingService = (data) => {\r\n    return axios.post('/api/booking/create-new-booking', {\r\n        time: data.time,\r\n        carId: data.carId,\r\n        userId: data.userId,\r\n        firstName: data.firstName,\r\n        email: data.email,\r\n        carName: data.carName,\r\n    })\r\n}\r\n\r\nconst deleteBookingService = (bookingId) => {\r\n    return axios.delete('/api/booking/delete-booking', {\r\n        data: {\r\n            bookingId: bookingId\r\n        }\r\n    })\r\n}\r\n\r\nconst updateBookingService = (data) => {\r\n    return axios.put('/api/booking/update-booking', {\r\n        id: data.id,\r\n        status: data.status,\r\n        time: data.time,\r\n    })\r\n}\r\n\r\nconst getBookingByIdService = (userId) => {\r\n    return axios.get(`/api/booking/get-one-booking?userId=${userId}`)\r\n}\r\n\r\nconst cancelBookingService = (bookingId) => {\r\n    return axios.put('/api/booking/cancel-booking', {\r\n        bookingId: bookingId,\r\n    })\r\n}\r\n\r\nexport {\r\n    getProcessBookingService,\r\n    createNewBookingService,\r\n    deleteBookingService,\r\n    updateBookingService,\r\n    getBookingByIdService,\r\n    cancelBookingService,\r\n}","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\r\nimport {\r\n    getProcessBookingService,\r\n    createNewBookingService,\r\n    deleteBookingService,\r\n    updateBookingService,\r\n    getBookingByIdService,\r\n    cancelBookingService,\r\n} from '../services/bookingServices'\r\n\r\nexport const getProcessBooking = createAsyncThunk(\r\n    'booking/getProcessBooking',\r\n    async (pagination) => {\r\n        try {\r\n            const response = await getProcessBookingService(pagination)\r\n            return response\r\n        } catch (error) {\r\n            return error;\r\n        }\r\n    },\r\n)\r\n\r\nexport const creatNewBooking = createAsyncThunk(\r\n    'booking/creatNewBooking',\r\n    async (data, { rejectWithValue }) => {\r\n        try {\r\n            const response = await createNewBookingService(data)\r\n            return response\r\n        } catch (error) {\r\n            return rejectWithValue(error);\r\n        }\r\n    },\r\n)\r\n\r\nexport const deleteBooking = createAsyncThunk(\r\n    'booking/deleteBooking',\r\n    async (bookingId) => {\r\n        try {\r\n            const response = await deleteBookingService(bookingId)\r\n            return response\r\n        } catch (error) {\r\n            return error;\r\n        }\r\n    },\r\n)\r\n\r\nexport const updateBooking = createAsyncThunk(\r\n    'booking/updateBooking',\r\n    async (data) => {\r\n        try {\r\n            const response = await updateBookingService(data)\r\n            return response\r\n        } catch (error) {\r\n            return error;\r\n        }\r\n    },\r\n)\r\n\r\nexport const getBookingById = createAsyncThunk(\r\n    'booking/getBookingById',\r\n    async (userId) => {\r\n        try {\r\n            const response = await getBookingByIdService(userId)\r\n            return response\r\n        } catch (error) {\r\n            return error;\r\n        }\r\n    },\r\n)\r\n\r\nexport const cancelBooking = createAsyncThunk(\r\n    'booking/cancelBooking',\r\n    async (bookingId) => {\r\n        try {\r\n            const response = await cancelBookingService(bookingId)\r\n            return response\r\n        } catch (error) {\r\n            return error;\r\n        }\r\n    },\r\n)\r\n\r\nconst initialState = {\r\n    // common state\r\n    isBookingError: null,\r\n\r\n    // get all processing bookings with pagination\r\n    isLoadingAllBookings: false,\r\n    bookingList: [],\r\n    totalBookingPages: 0,\r\n\r\n    // create new booking\r\n    isCreatingBooking: false,\r\n\r\n    // delete booking\r\n    isDeletingBooking: false,\r\n\r\n    // update booking\r\n    isUpdatingBooking: false,\r\n\r\n    // get booking by id\r\n    isLoadingBookingById: false,\r\n    detailBooking: null,\r\n\r\n    // cancel booking\r\n    isCancelingBooking: false,\r\n}\r\n\r\nexport const bookingSlice = createSlice({\r\n    name: 'booking',\r\n    initialState,\r\n    reducers: {\r\n\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder\r\n            // get all processing bookings\r\n            .addCase(getProcessBooking.pending, (state, action) => {\r\n                state.isLoadingAllBookings = true\r\n            })\r\n            .addCase(getProcessBooking.fulfilled, (state, action) => {\r\n                state.isLoadingAllBookings = false\r\n                state.bookingList = action.payload?.data?.bookings\r\n                state.totalBookingPages = action.payload?.data?.totalBookingPages\r\n            })\r\n            .addCase(getProcessBooking.rejected, (state, action) => {\r\n                state.isLoadingAllBookings = false\r\n                state.isBookingError = action.payload.message\r\n            })\r\n\r\n            // create a new booking\r\n            .addCase(creatNewBooking.pending, (state, action) => {\r\n                state.isCreatingBooking = true\r\n            })\r\n            .addCase(creatNewBooking.fulfilled, (state, action) => {\r\n                state.isCreatingBooking = false\r\n            })\r\n            .addCase(creatNewBooking.rejected, (state, action) => {\r\n                state.isCreatingBooking = false\r\n                state.isBookingError = action.payload.message\r\n            })\r\n\r\n            // delete booking\r\n            .addCase(deleteBooking.pending, (state, action) => {\r\n                state.isDeletingBooking = true\r\n            })\r\n            .addCase(deleteBooking.fulfilled, (state, action) => {\r\n                state.isDeletingBooking = false\r\n            })\r\n            .addCase(deleteBooking.rejected, (state, action) => {\r\n                state.isDeletingBooking = false\r\n                state.isBookingError = action.payload.message\r\n            })\r\n\r\n            // update booking\r\n            .addCase(updateBooking.pending, (state, action) => {\r\n                state.isUpdatingBooking = true\r\n            })\r\n            .addCase(updateBooking.fulfilled, (state, action) => {\r\n                state.isUpdatingBooking = false\r\n            })\r\n            .addCase(updateBooking.rejected, (state, action) => {\r\n                state.isUpdatingBooking = false\r\n                state.isBookingError = action.payload.message\r\n            })\r\n\r\n\r\n            // get booking by userId\r\n            .addCase(getBookingById.pending, (state, action) => {\r\n                state.isLoadingBookingById = true\r\n            })\r\n            .addCase(getBookingById.fulfilled, (state, action) => {\r\n                state.isLoadingBookingById = false\r\n                state.detailBooking = action.payload?.data\r\n            })\r\n            .addCase(getBookingById.rejected, (state, action) => {\r\n                state.isLoadingBookingById = false\r\n                state.isBookingError = action.payload.message\r\n            })\r\n\r\n            // cancel booking\r\n            .addCase(cancelBooking.pending, (state, action) => {\r\n                state.isCancelingBooking = true\r\n            })\r\n            .addCase(cancelBooking.fulfilled, (state, action) => {\r\n                state.isCancelingBooking = false\r\n            })\r\n            .addCase(cancelBooking.rejected, (state, action) => {\r\n                state.isCancelingBooking = false\r\n                state.isBookingError = action.payload.message\r\n            })\r\n    },\r\n})\r\n\r\nexport default bookingSlice.reducer","import Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\n\r\nconst ModalDeleteBooking = (props) => {\r\n\r\n    return (\r\n        <>\r\n            <Modal show={props.deleteBookingShow} onHide={props.deleteBookingClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Confirm delete booking: ID {props.dataDeleteModal?.id}</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>Are you sure to delete this booking?</Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={props.deleteBookingClose}>\r\n                        Close\r\n                    </Button>\r\n                    <Button variant=\"btn btn-danger\" onClick={props.handleDeleteBooking}>\r\n                        Confirm\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ModalDeleteBooking;","import Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { updateBooking } from '../../slices/bookingSlice';\r\nimport { useDispatch } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport { getProcessBooking } from '../../slices/bookingSlice'\r\n\r\nconst ModalUpdateBooking = (props) => {\r\n    const dataUpdateModal = props.dataUpdateModal\r\n    const page = props.page\r\n    const limit = props.limit\r\n\r\n    const [status, setStatus] = useState('')\r\n    const [time, setTime] = useState('')\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        if (dataUpdateModal) {\r\n            setStatus(dataUpdateModal?.status)\r\n            setTime(dataUpdateModal?.time)\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [dataUpdateModal])\r\n\r\n    const handleUpdateBooking = async () => {\r\n        let id = dataUpdateModal?.id\r\n        let data = { id, status, time }\r\n        let response = await dispatch(updateBooking(data))\r\n\r\n        if (response\r\n            && response.payload\r\n            && response.payload.response\r\n            && response.payload.response.data\r\n            && response.payload.response.data.errorCode !== 0\r\n        ) {\r\n            toast.error(response.payload.response.data.errorMessage)\r\n        }\r\n\r\n        if (response && response.payload && response.payload.errorCode === 0) {\r\n            toast.success(response.payload.errorMessage)\r\n            props.updateBookingClose()\r\n            let pagination = { page, limit }\r\n            dispatch(getProcessBooking(pagination))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Modal size=\"lg\" show={props.updateBookingShow} onHide={props.updateBookingClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Update a booking: ID {dataUpdateModal?.id}</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <form className=\"row g-3\">\r\n                        <div className=\"col-6\">\r\n                            <label htmlFor=\"status\">status</label>\r\n                            <select\r\n                                value={status}\r\n                                onChange={(event) => setStatus(event.target.value)}\r\n                                id='status'\r\n                                className=\"form-select\"\r\n                            >\r\n                                <option hidden></option>\r\n                                <option value=\"processing\">processing</option>\r\n                                <option value=\"completed\">completed</option>\r\n                                <option value=\"cancel\">cancel</option>\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                            <label htmlFor=\"time\">Select time</label>\r\n                            <select\r\n                                value={time}\r\n                                onChange={(event) => setTime(event.target.value)}\r\n                                id='time'\r\n                                className=\"form-select\"\r\n                            >\r\n                                <option hidden></option>\r\n                                <option value=\"08:00\">08:00</option>\r\n                                <option value=\"09:00\">09:00</option>\r\n                                <option value=\"10:00\">10:00</option>\r\n                                <option value=\"11:00\">11:00</option>\r\n                                <hr />\r\n                                <option value=\"13:00\">13:00</option>\r\n                                <option value=\"14:00\">14:00</option>\r\n                                <option value=\"15:00\">15:00</option>\r\n                                <option value=\"16:00\">16:00</option>\r\n                            </select>\r\n                        </div>\r\n                    </form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={props.updateBookingClose}>\r\n                        Close\r\n                    </Button>\r\n                    <Button variant=\"btn btn-primary\" onClick={() => handleUpdateBooking()}>\r\n                        Save\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ModalUpdateBooking;","import React, { useEffect, useState } from 'react';\r\nimport './ManageBooking.scss';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport ReactPaginate from 'react-paginate';\r\nimport { toast } from 'react-toastify';\r\nimport LoadingSpinner from '../LoadingSpinner/LoadingSpinner'\r\nimport { getProcessBooking } from '../../slices/bookingSlice'\r\nimport ModalDeleteBooking from './ModalDeleteBooking'\r\nimport { deleteBooking } from '../../slices/bookingSlice'\r\nimport ModalUpdateBooking from './ModalUpdateBooking'\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\nconst ManageBooking = (props) => {\r\n    const dispatch = useDispatch()\r\n    const [scrollHeight, setScrollHeight] = useState(0)\r\n    const [scrollWidth, setScrollWidth] = useState(0)\r\n\r\n    // pagination\r\n    const totalBookingPages = useSelector(state => state.booking.totalBookingPages)\r\n    const bookingList = useSelector(state => state.booking.bookingList)\r\n    const isLoadingAllBookings = useSelector(state => state.booking.isLoadingAllBookings)\r\n    const [page, setPage] = useState(1)\r\n    // eslint-disable-next-line\r\n    const [limit, setLimit] = useState(4)\r\n\r\n    // delete booking\r\n    const [deleteModalShow, setDeleteModalShow] = useState(false)\r\n    const [dataDeleteModal, setDataDeleteModal] = useState({})\r\n    const isDeletingBooking = useSelector(state => state.booking.isDeletingBooking)\r\n\r\n    // update booking\r\n    const [updateModalShow, setUpdateModalShow] = useState(false)\r\n    const [dataUpdateModal, setDataUpdateModal] = useState({})\r\n    const isUpdatingBooking = useSelector(state => state.booking.isUpdatingBooking)\r\n\r\n    useEffect(() => {\r\n        let pagination = { page, limit }\r\n        dispatch(getProcessBooking(pagination))\r\n        // eslint-disable-next-line\r\n    }, [page])\r\n\r\n    useEffect(() => {\r\n        let windowWidth = window.innerWidth\r\n        let windowHeight = window.innerHeight\r\n        setScrollHeight(windowHeight)\r\n        setScrollWidth(windowWidth)\r\n    }, [scrollWidth, scrollHeight])\r\n\r\n    // this function is from react-paginate\r\n    const handlePageClick = (event) => {\r\n        setPage(event.selected + 1)\r\n    }\r\n\r\n    const handleDeleteBookingBtn = (data) => {\r\n        setDataDeleteModal(data)\r\n        setDeleteModalShow(true)\r\n    }\r\n\r\n    const handleDeleteBookingClose = () => {\r\n        setDataDeleteModal({})\r\n        setDeleteModalShow(false)\r\n    }\r\n\r\n    const handleDeleteBooking = async () => {\r\n        let bookingId = dataDeleteModal?.id\r\n        if (bookingId) {\r\n            let response = await dispatch(deleteBooking(bookingId))\r\n            if (response\r\n                && response.payload\r\n                && response.payload.response\r\n                && response.payload.response.data\r\n                && response.payload.response.data.errorCode !== 0\r\n            ) {\r\n                toast.error(response.payload.response.data.errorMessage)\r\n            }\r\n\r\n            if (response && response.payload && response.payload.errorCode === 0) {\r\n                toast.success(response.payload.errorMessage)\r\n                setDeleteModalShow(false)\r\n                let pagination = { page, limit }\r\n                dispatch(getProcessBooking(pagination))\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleUpdateBookingBtn = (data) => {\r\n        setDataUpdateModal(data)\r\n        setUpdateModalShow(true)\r\n    }\r\n\r\n    const handleUpdateBookingClose = () => {\r\n        setDataUpdateModal({})\r\n        setUpdateModalShow(false)\r\n    }\r\n\r\n    return (\r\n        <Scrollbars style={{ width: scrollWidth, height: scrollHeight }}>\r\n            <div className='manage-booking-container'>\r\n                <div className='container'>\r\n                    <h1 className='manage-booking-title'>MANAGE BOOKING</h1>\r\n\r\n                    <table className=\"table table-hover customers mt-3\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th scope=\"col\">ID</th>\r\n                                <th scope=\"col\">status</th>\r\n                                <th scope=\"col\">time</th>\r\n                                <th scope=\"col\">userName</th>\r\n                                <th scope=\"col\">carName</th>\r\n                                <th scope=\"col\">actions</th>\r\n                            </tr>\r\n                        </thead>\r\n                        {(isLoadingAllBookings || isDeletingBooking || isUpdatingBooking) ?\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td colSpan={6}><LoadingSpinner /></td>\r\n                                </tr>\r\n                            </tbody>\r\n                            :\r\n                            <tbody>\r\n                                {bookingList && bookingList.length > 0 ?\r\n                                    bookingList.map((item, index) => (\r\n                                        <tr key={`booking-${index}`}>\r\n                                            <td>{item.id}</td>\r\n                                            <td>{item.status}</td>\r\n                                            <td>{item.time}</td>\r\n                                            <td>{item?.User?.firstName}</td>\r\n                                            <td>{item?.Car?.name}</td>\r\n                                            <td>\r\n                                                <div className='action-container'>\r\n                                                    <button\r\n                                                        onClick={() => handleUpdateBookingBtn(item)}\r\n                                                        className='btn btn-warning'\r\n                                                    >\r\n                                                        Edit\r\n                                                    </button>\r\n                                                    <button\r\n                                                        onClick={() => handleDeleteBookingBtn(item)}\r\n                                                        className='btn btn-danger'>\r\n                                                        Delete\r\n                                                    </button>\r\n                                                </div>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))\r\n                                    :\r\n                                    <tr>\r\n                                        <td colSpan={6}>\r\n\r\n                                        </td>\r\n                                    </tr>\r\n                                }\r\n                            </tbody>\r\n                        }\r\n                    </table>\r\n\r\n                    {/* pagination */}\r\n                    {\r\n                        totalBookingPages && totalBookingPages > 0 &&\r\n                        <ReactPaginate\r\n                            nextLabel=\"next >\"\r\n                            onPageChange={handlePageClick}\r\n                            pageRangeDisplayed={2}\r\n                            marginPagesDisplayed={2}\r\n                            pageCount={totalBookingPages}\r\n                            previousLabel=\"< previous\"\r\n                            pageClassName=\"page-item\"\r\n                            pageLinkClassName=\"page-link\"\r\n                            previousClassName=\"page-item\"\r\n                            previousLinkClassName=\"page-link\"\r\n                            nextClassName=\"page-item\"\r\n                            nextLinkClassName=\"page-link\"\r\n                            breakLabel=\"...\"\r\n                            breakClassName=\"page-item\"\r\n                            breakLinkClassName=\"page-link\"\r\n                            containerClassName=\"pagination\"\r\n                            activeClassName=\"active\"\r\n                            renderOnZeroPageCount={null}\r\n                        />\r\n                    }\r\n\r\n                    <ModalDeleteBooking\r\n                        deleteBookingShow={deleteModalShow}\r\n                        deleteBookingClose={handleDeleteBookingClose}\r\n                        handleDeleteBooking={handleDeleteBooking}\r\n                        dataDeleteModal={dataDeleteModal}\r\n                    />\r\n\r\n                    <ModalUpdateBooking\r\n                        updateBookingShow={updateModalShow}\r\n                        updateBookingClose={handleUpdateBookingClose}\r\n                        dataUpdateModal={dataUpdateModal}\r\n                        page={page}\r\n                        limit={limit}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </Scrollbars>\r\n    )\r\n}\r\n\r\nexport default ManageBooking;","import Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\n\r\nconst ModalCancelBooking = (props) => {\r\n\r\n    return (\r\n        <>\r\n            <Modal show={props.cancelBookingShow} onHide={props.cancelBookingClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Confirm cancel booking</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>Are you sure to cancel this booking?</Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={props.cancelBookingClose}>\r\n                        Close\r\n                    </Button>\r\n                    <Button variant=\"btn btn-danger\" onClick={props.handleCancelBooking}>\r\n                        Confirm\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ModalCancelBooking;","import React, { useEffect, useState } from 'react';\r\nimport './Booking.scss';\r\nimport LoadingSpinner from '../LoadingSpinner/LoadingSpinner';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport { getBookingById } from '../../slices/bookingSlice'\r\nimport { cancelBooking } from '../../slices/bookingSlice'\r\nimport ModalCancelBooking from './ModalCancelBooking';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\nconst Booking = (props) => {\r\n    const [scrollHeight, setScrollHeight] = useState(0)\r\n    const [scrollWidth, setScrollWidth] = useState(0)\r\n    const dispatch = useDispatch()\r\n    const isLoadingBookingById = useSelector(state => state.booking.isLoadingBookingById)\r\n    const detailBooking = useSelector(state => state.booking.detailBooking)\r\n    const user = useSelector(state => state.user.user)\r\n\r\n    // cancel booking\r\n    const [cancelModalShow, setCancelModalShow] = useState(false)\r\n    const isCancelingBooking = useSelector(state => state.booking.isCancelingBooking)\r\n\r\n    useEffect(() => {\r\n        let userId = user?.id\r\n        if (userId) {\r\n            dispatch(getBookingById(userId))\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        let windowWidth = window.innerWidth\r\n        let windowHeight = window.innerHeight\r\n        setScrollHeight(windowHeight)\r\n        setScrollWidth(windowWidth)\r\n    }, [scrollWidth, scrollHeight])\r\n\r\n    const handleCancelBookingBtn = () => {\r\n        setCancelModalShow(true)\r\n    }\r\n\r\n    const handleCancelBookingClose = () => {\r\n        setCancelModalShow(false)\r\n    }\r\n\r\n    const handleCancelBooking = async () => {\r\n        let bookingId = detailBooking?.id\r\n        if (bookingId) {\r\n            let response = await dispatch(cancelBooking(bookingId))\r\n            if (response\r\n                && response.payload\r\n                && response.payload.response\r\n                && response.payload.response.data\r\n                && response.payload.response.data.errorCode !== 0\r\n            ) {\r\n                toast.error(response.payload.response.data.errorMessage)\r\n            }\r\n\r\n            if (response && response.payload && response.payload.errorCode === 0) {\r\n                toast.success(response.payload.errorMessage)\r\n                let userId = user?.id\r\n                if (userId) {\r\n                    dispatch(getBookingById(userId))\r\n                }\r\n                setCancelModalShow(false)\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Scrollbars style={{ width: scrollWidth, height: scrollHeight }}>\r\n            <div className='booking-container'>\r\n                <div className='container'>\r\n                    <div className='row'>\r\n                        <h1 className='booking-title'>YOUR BOOKING</h1>\r\n\r\n                        <table className=\"table table-hover customers mt-3 col-12\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th scope=\"col\">ID</th>\r\n                                    <th scope=\"col\">status</th>\r\n                                    <th scope=\"col\">time</th>\r\n                                    <th scope=\"col\">userName</th>\r\n                                    <th scope=\"col\">carName</th>\r\n                                    <th scope=\"col\">action</th>\r\n                                </tr>\r\n                            </thead>\r\n                            {(isLoadingBookingById || isCancelingBooking) ?\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td colSpan={6}><LoadingSpinner /></td>\r\n                                    </tr>\r\n                                </tbody>\r\n                                :\r\n                                <tbody>\r\n                                    {detailBooking ?\r\n                                        <tr>\r\n                                            <td>{detailBooking.id}</td>\r\n                                            <td>{detailBooking.status}</td>\r\n                                            <td>{detailBooking.time}</td>\r\n                                            <td>{detailBooking?.User?.firstName}</td>\r\n                                            <td>{detailBooking?.Car?.name}</td>\r\n                                            <td>\r\n                                                <div className='action-container'>\r\n                                                    <button\r\n                                                        onClick={() => handleCancelBookingBtn()}\r\n                                                        className='btn btn-danger'>\r\n                                                        Cancel\r\n                                                    </button>\r\n                                                </div>\r\n                                            </td>\r\n                                        </tr>\r\n                                        :\r\n                                        <tr>\r\n                                            <td colSpan={6}>\r\n                                                <h3\r\n                                                    style={{ textAlign: 'center' }}\r\n                                                >\r\n                                                    You don't have any booking\r\n                                                </h3>\r\n                                            </td>\r\n                                        </tr>\r\n                                    }\r\n                                </tbody>\r\n                            }\r\n                        </table>\r\n\r\n                        <ModalCancelBooking\r\n                            cancelBookingShow={cancelModalShow}\r\n                            cancelBookingClose={handleCancelBookingClose}\r\n                            handleCancelBooking={handleCancelBooking}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Scrollbars>\r\n    )\r\n}\r\n\r\nexport default Booking;","import Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport React, { useState } from 'react';\r\nimport _ from 'lodash';\r\nimport { updatePersonal } from '../../slices/userSlice'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst ModalUpdatePersonal = (props) => {\r\n    const userState = useSelector(state => state.user.user)\r\n\r\n    const defaultState = {\r\n        id: userState?.id,\r\n        firstName: userState?.firstName,\r\n        lastName: userState?.lastName,\r\n        address: userState?.address,\r\n        phoneNumber: userState?.phoneNumber,\r\n        gender: userState?.gender,\r\n        // groupId: '',\r\n    }\r\n\r\n    const [user, setUser] = useState(defaultState)\r\n    const dispatch = useDispatch()\r\n\r\n    const handleOnchangeInput = (value, name) => {\r\n        let _userData = _.cloneDeep(user)\r\n        _userData[name] = value\r\n        setUser(_userData)\r\n    }\r\n\r\n    const handleUpdatePersonal = async () => {\r\n        let response = await dispatch(updatePersonal(user))\r\n\r\n        if (response\r\n            && response.payload\r\n            && response.payload.response\r\n            && response.payload.response.data\r\n            && response.payload.response.data.errorCode !== 0\r\n        ) {\r\n            toast.error(response.payload.response.data.errorMessage)\r\n        }\r\n\r\n        if (response && response.payload && response.payload.errorCode === 0) {\r\n            toast.success(response.payload.errorMessage)\r\n            props.updateModalClose()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Modal show={props.updateModalShow} onHide={props.updateModalClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Update Personal Information</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <form className=\"row g-3\">\r\n                        <div className=\"col-6\">\r\n                            <label htmlFor=\"inputFirstName\">First name</label>\r\n                            <input\r\n                                value={user.firstName}\r\n                                onChange={(event) => handleOnchangeInput(event.target.value, \"firstName\")}\r\n                                id='inputFirstName' type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"First name\" />\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                            <label htmlFor=\"inputLastName\">Last name</label>\r\n                            <input\r\n                                value={user.lastName}\r\n                                onChange={(event) => handleOnchangeInput(event.target.value, \"lastName\")}\r\n                                id='inputLastName' type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Last name\" />\r\n                        </div>\r\n\r\n                        <div className=\"col-12\">\r\n                            <label htmlFor=\"inputAddress\">Address</label>\r\n                            <input\r\n                                value={user.address}\r\n                                onChange={(event) => handleOnchangeInput(event.target.value, \"address\")}\r\n                                id='inputAddress' type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"1234 Main St\" />\r\n                        </div>\r\n\r\n                        <div className=\"col-6\">\r\n                            <label htmlFor=\"inputPhoneNumber\">Phone number</label>\r\n                            <input\r\n                                value={user.phoneNumber}\r\n                                onChange={(event) => handleOnchangeInput(event.target.value, \"phoneNumber\")}\r\n                                id='inputPhoneNumber' type=\"text\"\r\n                                className=\"form-control\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                            <label htmlFor=\"inputGender\">Gender</label>\r\n                            <select\r\n                                value={user.gender}\r\n                                onChange={(event) => handleOnchangeInput(event.target.value, \"gender\")}\r\n                                id='inputGender'\r\n                                className=\"form-select\"\r\n                            >\r\n                                <option hidden></option>\r\n                                <option value=\"1\">Male</option>\r\n                                <option value=\"0\">Female</option>\r\n                            </select>\r\n                        </div>\r\n                        {/* <div className=\"col-4\">\r\n                            <label htmlFor=\"inputGroupId\">Group</label>\r\n                            <select\r\n                                value={user.groupId}\r\n                                onChange={(event) => handleOnchangeInput(event.target.value, \"groupId\")}\r\n                                id='inputGroupId'\r\n                                className=\"form-select\"\r\n                            >\r\n                                <option hidden></option>\r\n                                <option value=\"1\">Worker</option>\r\n                                <option value=\"2\">Customer</option>\r\n                                <option value=\"3\">Manager</option>\r\n                            </select>\r\n                        </div> */}\r\n                    </form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={props.updateModalClose}>\r\n                        Close\r\n                    </Button>\r\n                    <Button variant=\"btn btn-primary\" onClick={() => handleUpdatePersonal()}>\r\n                        Update\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ModalUpdatePersonal;","import Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport React, { useState } from 'react';\r\nimport { changePassword } from '../../slices/userSlice'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst ModalChangePassword = (props) => {\r\n    const userState = useSelector(state => state.user.user)\r\n\r\n    const [password, setPassword] = useState('')\r\n    const [newPassword, setNewPassword] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const handleChangePassword = async () => {\r\n        let userId = userState?.id\r\n        let data = { userId, password, newPassword }\r\n        let response = await dispatch(changePassword(data))\r\n\r\n        if (response\r\n            && response.payload\r\n            && response.payload.response\r\n            && response.payload.response.data\r\n            && response.payload.response.data.errorCode !== 0\r\n        ) {\r\n            toast.error(response.payload.response.data.errorMessage)\r\n        }\r\n\r\n        if (response && response.payload && response.payload.errorCode === 0) {\r\n            toast.success(response.payload.errorMessage)\r\n            props.passwordModalClose()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Modal show={props.passwordModalShow} onHide={props.passwordModalClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Change Your Password</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <form className=\"row g-3\">\r\n                        <div className=\"col-12\">\r\n                            <label htmlFor=\"password\">Password</label>\r\n                            <input\r\n                                value={password}\r\n                                onChange={(event) => setPassword(event.target.value)}\r\n                                id='password' type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Enter your password\" />\r\n                        </div>\r\n                        <div className=\"col-12\">\r\n                            <label htmlFor=\"newPassword\">New password</label>\r\n                            <input\r\n                                value={newPassword}\r\n                                onChange={(event) => setNewPassword(event.target.value)}\r\n                                id='newPassword' type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Enter your new password\" />\r\n                        </div>\r\n                    </form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={props.passwordModalClose}>\r\n                        Close\r\n                    </Button>\r\n                    <Button variant=\"btn btn-primary\" onClick={() => handleChangePassword()}>\r\n                        Change\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ModalChangePassword;","import React, { useState } from 'react';\r\nimport './Personal.scss';\r\nimport { useSelector } from 'react-redux';\r\nimport ModalUpdatePersonal from './ModalUpdatePersonal'\r\nimport LoadingSpinner from '../LoadingSpinner/LoadingSpinner';\r\nimport ModalChangePassword from './ModalChangePassword';\r\n\r\nconst Personal = (props) => {\r\n    const user = useSelector(state => state.user.user)\r\n\r\n    // update modal\r\n    const isUpdatingPersonal = useSelector(state => state.user.isUpdatingPersonal)\r\n    const [showModalUpdate, setShowModalUpdate] = useState(false)\r\n\r\n    // change password modal\r\n    const [showModalChangePassword, setShowModalChangePassword] = useState(false)\r\n\r\n    const handleEditBtn = () => {\r\n        setShowModalUpdate(true)\r\n    }\r\n\r\n    const handleUpdatePersonalClose = () => {\r\n        setShowModalUpdate(false)\r\n    }\r\n\r\n    const handleChangePasswordBtn = () => {\r\n        setShowModalChangePassword(true)\r\n    }\r\n\r\n    const handleChangePasswordModalClose = () => {\r\n        setShowModalChangePassword(false)\r\n    }\r\n\r\n    if (isUpdatingPersonal) {\r\n        return (\r\n            <LoadingSpinner />\r\n        )\r\n    } else {\r\n        return (\r\n            <div className='personal-container'>\r\n                <div className='container'>\r\n                    <div className='row'>\r\n                        {user &&\r\n                            <div className='personal-content col-12 col-md-8 col-lg-6'>\r\n                                <div className='personal-title'>\r\n                                    <h1>Personal Information</h1>\r\n                                </div>\r\n\r\n                                <div className='personal-info'>\r\n                                    <p>ID: {user.id}</p>\r\n                                    <p>Email: {user.email}</p>\r\n                                    <p>Fistname: {user.firstName}</p>\r\n                                    <p>Lastname: {user.lastName}</p>\r\n                                    <p>Address: {user.address}</p>\r\n                                    <p>Phonenumber: {user.phoneNumber}</p>\r\n                                    <p>Gender: {user.gender === 1 ? \"Male\" : \"Female\"}</p>\r\n                                    <p>Group: {user?.Group?.name}</p>\r\n                                    <p>Description: {user?.Group?.description}</p>\r\n\r\n                                    <button\r\n                                        onClick={() => handleEditBtn()}\r\n                                        className='btn btn-primary'\r\n                                    >\r\n                                        Edit\r\n                                    </button>\r\n                                    <div className='mt-3 mb-3'></div>\r\n                                    <button\r\n                                        onClick={() => handleChangePasswordBtn()}\r\n                                        className='btn btn-primary'\r\n                                    >\r\n                                        Change Password\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                        <div className='col-6'></div>\r\n                    </div>\r\n\r\n                    <ModalUpdatePersonal\r\n                        updateModalShow={showModalUpdate}\r\n                        updateModalClose={handleUpdatePersonalClose}\r\n                    />\r\n\r\n                    <ModalChangePassword\r\n                        passwordModalShow={showModalChangePassword}\r\n                        passwordModalClose={handleChangePasswordModalClose}\r\n                    />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Personal;","import React, { useEffect } from 'react';\r\nimport './DetailUser.scss';\r\nimport { getUserById } from '../../slices/userSlice'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport LoadingSpinner from '../LoadingSpinner/LoadingSpinner';\r\n\r\nconst DetailUser = (props) => {\r\n\r\n    let queryParameter = props.location.search\r\n    let userId = queryParameter.split(\"?id=\")[1]\r\n\r\n    const isLoadingUserById = useSelector(state => state.user.isLoadingUserById)\r\n    const detailUser = useSelector(state => state.user.detailUser)\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(getUserById(userId))\r\n        // eslint-disable-next-line\r\n    }, [userId])\r\n\r\n    const handleCombackBtn = () => {\r\n        history.push(\"/user\")\r\n    }\r\n\r\n    if (isLoadingUserById) {\r\n        return (\r\n            <LoadingSpinner />\r\n        )\r\n    } else {\r\n        return (\r\n            <div className='detail-user-container'>\r\n                <div className='container'>\r\n                    <div className='row'>\r\n                        {detailUser &&\r\n                            <div className='detail-content col-12 col-md-8 col-lg-6'>\r\n                                <div className='detail-title'>\r\n                                    <h1>Detail User Information</h1>\r\n                                </div>\r\n                                <div className='detail-info'>\r\n                                    <p>ID: {detailUser.id}</p>\r\n                                    <p>Email: {detailUser.email}</p>\r\n                                    <p>Fistname: {detailUser.firstName}</p>\r\n                                    <p>Lastname: {detailUser.lastName}</p>\r\n                                    <p>Address: {detailUser.address}</p>\r\n                                    <p>Phonenumber: {detailUser.phoneNumber}</p>\r\n                                    <p>Gender: {detailUser.gender === 1 ? \"Male\" : \"Female\"}</p>\r\n                                    <p>Group: {detailUser.Group.name}</p>\r\n                                    <p>Description: {detailUser.Group.description}</p>\r\n                                    <button\r\n                                        className='btn btn-warning'\r\n                                        onClick={() => handleCombackBtn()}\r\n                                    >\r\n                                        COME BACK\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DetailUser;","import {\r\n    Route\r\n} from \"react-router-dom\";\r\nimport { useSelector } from 'react-redux';\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst PrivateRoute = (props) => {\r\n    // const isRefreshingUser = useSelector(state => state.user.isRefreshingUser)\r\n    const isAuthenticated = useSelector(state => state.user.isAuthenticated)\r\n    const user = useSelector(state => state.user.user)\r\n    const history = useHistory()\r\n\r\n    useEffect(() => {\r\n        if (!(isAuthenticated || user)) {\r\n            history.push('/login')\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n    if (isAuthenticated && user) {\r\n        return (\r\n            <>\r\n                <Route path={props.path} component={props.component} />\r\n            </>\r\n        )\r\n    } else {\r\n        return Redirect(\"/login\")\r\n    }\r\n}\r\n\r\nexport default PrivateRoute;","import Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport React, { useState } from 'react';\r\nimport { creatNewBooking } from '../../slices/bookingSlice';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst ModalCreateBooking = (props) => {\r\n\r\n    const [time, setTime] = useState('')\r\n    const user = useSelector(state => state.user.user)\r\n    const detailCar = useSelector(state => state.car.detailCar)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const handleCreateNewBooking = async () => {\r\n        let userId = user?.id\r\n        let firstName = user?.firstName\r\n        let email = user?.email\r\n        let carName = detailCar?.name\r\n        let carId = detailCar?.id\r\n        let data = { time, carId, userId, email, carName, firstName }\r\n        let response = await dispatch(creatNewBooking(data))\r\n\r\n        if (response\r\n            && response.payload\r\n            && response.payload.response\r\n            && response.payload.response.data\r\n            && response.payload.response.data.errorCode !== 0\r\n        ) {\r\n            toast.error(response.payload.response.data.errorMessage)\r\n        }\r\n\r\n        if (response && response.payload && response.payload.errorCode === 0) {\r\n            setTime('')\r\n            toast.success(response.payload.errorMessage)\r\n            props.createBookingClose()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Modal size=\"lg\" show={props.createBookingShow} onHide={props.createBookingClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Booking to see car: {detailCar?.name}</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <form className=\"row g-3\">\r\n                        <div className=\"col-12\">\r\n                            <label htmlFor=\"time\">Select time</label>\r\n                            <select\r\n                                value={time}\r\n                                onChange={(event) => setTime(event.target.value)}\r\n                                id='time'\r\n                                className=\"form-select\"\r\n                            >\r\n                                <option hidden></option>\r\n                                <option value=\"08:00\">08:00</option>\r\n                                <option value=\"09:00\">09:00</option>\r\n                                <option value=\"10:00\">10:00</option>\r\n                                <option value=\"11:00\">11:00</option>\r\n                                <hr />\r\n                                <option value=\"13:00\">13:00</option>\r\n                                <option value=\"14:00\">14:00</option>\r\n                                <option value=\"15:00\">15:00</option>\r\n                                <option value=\"16:00\">16:00</option>\r\n                            </select>\r\n                        </div>\r\n                    </form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={props.createBookingClose}>\r\n                        Close\r\n                    </Button>\r\n                    <Button variant=\"btn btn-primary\" onClick={() => handleCreateNewBooking()}>\r\n                        Booking\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ModalCreateBooking;","import React, { useEffect } from 'react';\r\n\r\nconst LikeAndShareFacebook = (props) => {\r\n    let { dataHref } = props\r\n\r\n    const initFacebookSDK = () => {\r\n        if (window.FB) {\r\n            window.FB.XFBML.parse();\r\n        }\r\n\r\n        window.fbAsyncInit = function () {\r\n            window.FB.init({\r\n                appId: process.env.REACT_APP_FACEBOOK_ID,\r\n                cookie: true,  // enable cookies to allow the server to access\r\n                // the session\r\n                xfbml: true,  // parse social plugins on this page\r\n                version: 'v2.5' // use version 2.1\r\n            });\r\n        };\r\n        // Load the SDK asynchronously\r\n        (function (d, s, id) {\r\n            var js, fjs = d.getElementsByTagName(s)[0];\r\n            if (d.getElementById(id)) return;\r\n            js = d.createElement(s); js.id = id;\r\n            js.src = `//connect.facebook.net/en_US/sdk.js`;\r\n            fjs.parentNode.insertBefore(js, fjs);\r\n        }(document, 'script', 'facebook-jssdk'));\r\n    }\r\n\r\n    useEffect(() => {\r\n        initFacebookSDK()\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <div\r\n                class=\"fb-like\"\r\n                data-href={dataHref}\r\n                // data-href=\"https://developers.facebook.com/docs/plugins/\"\r\n                data-width=\"\"\r\n                data-layout=\"\"\r\n                data-action=\"\"\r\n                data-size=\"\"\r\n                data-share=\"true\">\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LikeAndShareFacebook","import React, { useEffect } from 'react';\r\n\r\nconst CommentFacebook = (props) => {\r\n    let { dataHref } = props\r\n\r\n    const initFacebookSDK = () => {\r\n        if (window.FB) {\r\n            window.FB.XFBML.parse();\r\n        }\r\n\r\n        window.fbAsyncInit = function () {\r\n            window.FB.init({\r\n                appId: process.env.REACT_APP_FACEBOOK_ID,\r\n                cookie: true,  // enable cookies to allow the server to access\r\n                // the session\r\n                xfbml: true,  // parse social plugins on this page\r\n                version: 'v2.5' // use version 2.1\r\n            });\r\n        };\r\n        // Load the SDK asynchronously\r\n        (function (d, s, id) {\r\n            var js, fjs = d.getElementsByTagName(s)[0];\r\n            if (d.getElementById(id)) return;\r\n            js = d.createElement(s); js.id = id;\r\n            js.src = `//connect.facebook.net/en_US/sdk.js`;\r\n            fjs.parentNode.insertBefore(js, fjs);\r\n        }(document, 'script', 'facebook-jssdk'));\r\n    }\r\n\r\n    useEffect(() => {\r\n        initFacebookSDK()\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <div\r\n                class=\"fb-comments\"\r\n                // data-href=\"https://developers.facebook.com/docs/plugins/comments#configurator\"\r\n                data-href={dataHref}\r\n                data-width=\"100%\"\r\n                data-numposts=\"5\">\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CommentFacebook","import './DetailCar.scss'\r\nimport React, { useEffect, useState } from 'react';\r\nimport { getCarById } from '../../../slices/carSlice'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport LoadingSpinner from '../../LoadingSpinner/LoadingSpinner';\r\nimport ModalCreateBooking from '../../Booking/ModalCreateBooking';\r\nimport LikeAndShareFacebook from '../../FacebookSDK/LikeAndShareFacebook'\r\nimport CommentFacebook from '../../FacebookSDK/CommentFacebook'\r\n\r\nconst DetailCar = (props) => {\r\n    let queryParameter = props.location.search\r\n    let carId = queryParameter.split(\"?id=\")[1]\r\n\r\n    const dataHref = window.location.href\r\n\r\n    const dispatch = useDispatch()\r\n    const isLoadingCarById = useSelector(state => state.car.isLoadingCarById)\r\n    const detailCar = useSelector(state => state.car.detailCar)\r\n    const isCreatingBooking = useSelector(state => state.booking.isCreatingBooking)\r\n\r\n    // modal create booking \r\n    const [createModalShow, setCreateModalShow] = useState(false)\r\n\r\n    useEffect(() => {\r\n        dispatch(getCarById(carId))\r\n        // eslint-disable-next-line\r\n    }, [carId])\r\n\r\n    const handleBookingBtn = () => {\r\n        setCreateModalShow(true)\r\n    }\r\n\r\n    const handleCreateBookingClose = () => {\r\n        setCreateModalShow(false)\r\n    }\r\n\r\n    if (isLoadingCarById || isCreatingBooking) {\r\n        return (\r\n            <LoadingSpinner />\r\n        )\r\n    } else {\r\n        return (\r\n            <div className='detail-car-container'>\r\n                <div className='container'>\r\n                    <h1 className='detail-car-title'>DETAIL CAR PAGE</h1>\r\n\r\n                    {/* detail-car-content */}\r\n                    {detailCar &&\r\n                        <div className='detail-car row'>\r\n                            <div className='img-car-container col-12 col-lg-5'>\r\n                                <div\r\n                                    style={{ backgroundImage: `url(${detailCar.image})` }}\r\n                                    className='img-car'>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className='info-car-container col-12 col-lg-7'>\r\n                                <div className='info-car'>\r\n                                    <h2 className='car-name'>{detailCar.name}</h2>\r\n\r\n                                    <LikeAndShareFacebook dataHref={dataHref} />\r\n\r\n                                    <h3>Description:</h3>\r\n                                    <p className='car-description'> {detailCar.description}</p>\r\n                                    <button\r\n                                        onClick={() => handleBookingBtn()}\r\n                                        className='btn btn-primary'\r\n                                    >Booking</button>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <CommentFacebook\r\n                                dataHref={dataHref}\r\n                            />\r\n                        </div>\r\n                    }\r\n\r\n                    <ModalCreateBooking\r\n                        createBookingShow={createModalShow}\r\n                        createBookingClose={handleCreateBookingClose}\r\n                    />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DetailCar;","import {\r\n    Switch,\r\n    Route\r\n} from \"react-router-dom\";\r\n\r\nimport Home from \"../components/Home/Home\";\r\nimport Login from '../components/Auth/Login'\r\nimport Register from '../components/Auth/Register'\r\nimport User from '../components/ManageUser/User'\r\nimport Car from \"../components/Car/Car\";\r\nimport ManageBooking from \"../components/Booking/ManageBooking\";\r\nimport Booking from \"../components/Booking/Booking\";\r\nimport Personal from \"../components/Personal/Personal\";\r\nimport DetailUser from \"../components/ManageUser/DetailUser\";\r\nimport PrivateRoute from \"./PrivateRoute\";\r\nimport DetailCar from \"../components/Home/sections/DetailCar\";\r\n\r\nconst AppRoutes = () => {\r\n    return (\r\n        <>\r\n            <Switch>\r\n                <PrivateRoute path=\"/personal\" component={Personal} />\r\n                <PrivateRoute path=\"/car\" component={Car} exact />\r\n                <PrivateRoute path=\"/booking/manage\" component={ManageBooking} exact />\r\n                <PrivateRoute path=\"/booking\" component={Booking} exact />\r\n                <PrivateRoute path=\"/user\" exact component={User} />\r\n                <PrivateRoute path=\"/user/detail\" component={DetailUser} />\r\n                <PrivateRoute path=\"/car/detail\" component={DetailCar} exact />\r\n\r\n                <Route path=\"/\" exact>\r\n                    <Home />\r\n                </Route>\r\n\r\n                <Route path=\"/login\">\r\n                    <Login />\r\n                </Route>\r\n                <Route path=\"/register\">\r\n                    <Register />\r\n                </Route>\r\n                <Route path=\"*\">\r\n                    404 NOT FOUND\r\n                </Route>\r\n            </Switch>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AppRoutes;","import React, { useEffect } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport \"react-toastify/dist/ReactToastify.css\";\nimport './styles/App.scss';\nimport NavHeader from './components/Navbar/NavHeader'\nimport AppRoutes from './routes/AppRoutes';\nimport {\n  BrowserRouter as Router,\n} from \"react-router-dom\";\nimport { getUserRefresh } from './slices/userSlice';\nimport { useDispatch, useSelector } from 'react-redux';\nimport LoadingSpinner from \"./components/LoadingSpinner/LoadingSpinner\";\n\nfunction App() {\n  const dispatch = useDispatch()\n  const isRefreshingUser = useSelector(state => state.user.isRefreshingUser)\n  const isRemoving = useSelector(state => state.user.isRemoving)\n  const user = useSelector(state => state.user.user)\n\n  useEffect(() => {\n    if (!user) {\n      dispatch(getUserRefresh())\n    }\n    // eslint-disable-next-line\n  }, [user])\n\n  if (isRefreshingUser || isRemoving) {\n    return (\n      <LoadingSpinner />\n    )\n  } else {\n    return (\n      <div>\n        <Router>\n          <div className='nav-container'>\n            <NavHeader />\n          </div>\n\n          <div className='app-container'>\n            <AppRoutes />\n          </div>\n        </Router>\n\n        <ToastContainer\n          position=\"top-center\"\n          limit={1}\n          autoClose={5000}\n          hideProgressBar={false}\n          newestOnTop={false}\n          closeOnClick\n          rtl={false}\n          pauseOnFocusLoss\n          draggable\n          pauseOnHover\n          theme=\"light\"\n        />\n      </div>\n    )\n  }\n}\n\n\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from '@reduxjs/toolkit'\r\nimport userReducer from '../slices/userSlice'\r\nimport carReducer from '../slices/carSlice'\r\nimport bookingReducer from '../slices/bookingSlice'\r\n\r\nexport const store = configureStore({\r\n    reducer: {\r\n        user: userReducer,\r\n        car: carReducer,\r\n        booking: bookingReducer,\r\n    },\r\n})","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './styles/styles.scss';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\nimport { store } from './store/store'\r\nimport { Provider } from 'react-redux'\r\n\r\nReactDOM.render(\r\n  // <React.StrictMode>\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>\r\n  // <React.StrictMode/>\r\n  ,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();"],"sourceRoot":""}